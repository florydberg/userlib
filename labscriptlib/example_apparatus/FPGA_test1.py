#!/usr/bin/python

# 2022/02/16, 08:37:18
# automatically generated labscript experimental sequence from 'Andi_test.prg'
# command line: 'LVparser.py -p ./20220216_labview_prg -f Andi_test.prg -a ListOfActionAnalog.txt -d ListOfActionTTL.txt -o connection_table.py -l {'IR laser #3 (W)':[7.1,200.0],'Crossed Green #19 (W)':[0.1,100.0]}'

########################################################################################################################
# imports

import numpy as np
from labscript import start, stop, add_time_marker, LabscriptError, AnalogOut, DigitalOut
from user_devices.FPGA_device import FPGA_board, DigitalChannels, AnalogChannels, PRIMARY_IP, SECONDARY_IP, DEFAULT_PORT, AO_MIN, AO_MAX
from user_devices.generic_conversion import generic_conversion

########################################################################################################################
# in experimental sequcnce file uncomment this section and remove board and channel definitions below
from labscript_utils import import_or_reload
import_or_reload('labscriptlib.FPGA_test.connection_table')

from labscriptlib.FPGA_test.connection_table import primary, board_alt

########################################################################################################################
# experimental sequence

def precise_ramp(t, duration, initial, final, rate, name):
    """
    linear ramp with fixed sample rate.
    intermediate points are kept constant.
    this allows 'interleaved ramps' without time collisions.
    """
    #print(name, t)
    if initial   > AO_MAX: initial = AO_MAX
    elif initial < AO_MIN: initial = AO_MIN
    if final     > AO_MAX: final   = AO_MAX
    elif final   < AO_MIN: final   = AO_MIN
    if isinstance(t, np.ndarray):
        return np.where(t < duration, initial + np.floor(t*rate)/rate*(final-initial)/duration, [final]*len(t))
    else:
        if t < duration: return initial + np.floor(t*rate)/rate*(final-initial)/duration
        else:            return final

def generate_pulses(channel, t_start, t_duration, rate, first = 1, last = 0):
    """
    create on/off pulses with given rate in samples/s on the given channel from t_start in seconds for t_duration time.
    this is much more efficient than to call channel.go_high() and channel.g_low() in a loop.
    the first and last sample level can be changed from default high and low respectively.
    t_duration is an upper limit and is t_start + samples/rate with samples = floor(t_duration*rate)
    and if first != last and samples is odd samples -= 1
    and if first == last and samples is even samples -= 1
    returns actual duration in seconds.
    this is similar as labscript.repeat_pulse_sequence and functions.pulse_sequence but without interpolation.
    """
    samples = int(np.floor(t_duration * rate))
    if ( first != last ) and (samples & 1) == 1: samples -= 1 # want even samples
    if ( first == last ) and (samples & 1) == 0: samples -= 1 # want odd samples
    t_end = t_start + samples/rate
    times = np.linspace(t_start, t_end, samples)
    states = np.array([1, 0] if first != 0 else [0, 1], dtype=np.int8)
    states = np.tile(states, 1 + samples // 2)[:samples]
    print([len(times),len(states)])
    #print(np.transpose([times, states]))
    #print(samples)
    if False: # try to do it manually (not finished)
        def pulses(t):
            print('time = ', t)
            # function is called once with a scalar and once with a list???
            try:
                len(t)
                print('indices', np.array(np.floor((t - t_start) * rate), dtype = int))
                print('states = ', states[np.array(np.floor((t - t_start) * rate), dtype = int)])
                #return states[np.array(np.floor((t - t_start) * rate), dtype = int)]
                return np.array(np.floor((t - t_start) * rate), dtype=int) & 1
            except TypeError:
                return 0
        channel.add_instruction(t_start,
                             {'function': pulses, 'description': 'pulses',
                              'initial time': t_start, 'end time': t_end, 'clock rate': rate, 'units': None})
    else:
        # use repeat_pulse_sequence. this interpolates data which is not really needed.
        # this might generate not exactly the number of samples and times intended?
        channel.repeat_pulse_sequence(t_start, samples / rate, np.transpose([times, states]), (samples + 1) / rate, rate)
    return samples/rate

def quantize(time, offset):
    "returns time as next lower integer multiple of offset"
    return (time//offset)*offset

from user_devices.mogdevice import MOGDevice

def MOG_test():
    import time

    # Connect to device
    dev = MOGDevice('192.168.1.190')
    print('Device info:', dev.ask('info'))

    channel = 1  # channel 1-4
    frequency = 10.0  # frequency in MHz
    amp = [-10.0, 0.0]  # [minimum,maximum,step] amplitude in dBm
    phase = 0.0  # phase in degrees
    duration = 0  # duration in 5us units, 0 = wait for trigger for each step
    steps = 4  # number of steps

    dev.cmd('OFF,%i' % channel)

    if True: # RF on/off mode
        dev.cmd('MODE,%i,NSB' % (channel)) # standard mode
        #dev.cmd('TABLE,STOP,%i' % channel)  # stop tablemode
        dev.cmd('FREQ,%i,%.3fMHz' % (channel, frequency))
        dev.cmd('POW,%i,%.3fdBm' % (channel, amp[-1]))
        dev.cmd('PHASE,%i,%.3fdeg' % (channel, phase))
        #dev.cmd('ON,%i,POW' % (channel))
        dev.cmd('ON,%i,ALL' % (channel)) # one has to switch RF on, while TTL is low is kept off however
    else:
        # construct the pulse
        ramp = np.linspace(amp[0], amp[1], steps)  # 0 to 10 dBm
        ramp = np.concatenate((ramp, [-50]))
        print(ramp)

        dev.cmd('MODE,%i,TSB' % channel)  # set channel into table mode
        dev.cmd('TABLE,CLEAR,%i' % channel)  # clear entries in existing table
        dev.cmd('TABLE,EDGE,%i,RISING' % channel)  # set trigger edge rising or falling (works with firmware 0.5.3 but not with 0.5.1)
        dev.cmd('TABLE,REARM,%i,on' % channel)  # enable rearming of the table as soon as the table is finished
        if True:
            dev.cmd(
                'TABLE,RESTART,%i,on' % channel)  # restart table after was re-armed. this way needs same number of triggers as table entries.

        for i, amp in enumerate(ramp):
            print([i, amp])
            if True:
                cmd = 'TABLE,APPEND,%i,%.3fMHz,%.3fdBm,%.3fdeg,%i' % (channel, frequency, amp, phase, duration)
            else:
                cmd = 'TABLE,ENTRY,%i,%i,%.3fMHz,%.3fdBm,%.3fdeg,%i' % (channel, i+1, frequency, amp, phase, duration)
                #cmd = 'TABLE,ENTRY,%i,%i,%iHz,%i,%i,%i' % (channel,i+1,frequency,amp,phase,duration) # this returns always invalid table entry!? whatever I try
            print(cmd)
            ret = dev.cmd(cmd)
            print(ret)

        if True: # test change last entry
            i = len(ramp) - 1
            amp = -10
            cmd = 'TABLE,ENTRY,%i,%i,%.3fMHz,%.3fdBm,%.3fdeg,%i' % (channel, i + 1, frequency, amp, phase, duration)
            # cmd = 'TABLE,ENTRY,%i,%i,%iHz,%i,%i,%i' % (channel,i+1,frequency,amp,phase,duration) # this returns always invalid table entry!? whatever I try
            print(cmd)
            ret = dev.cmd(cmd)
            print(ret)

        if False:  # power off
            dev.cmd(f'TABLE,APPEND,%i,%iHz,0x0,0,0' % (channel, frequency))

        if False:
            dev.cmd('TABLE,ARM,%i' % channel)
        else:
            dev.cmd('TABLE,TIMESYNC,%i' % channel)  # the older manual says 'TABLE,TRIGSYNC' but which does not work!

        if False:
            dev.cmd('TABLE,STOP,%i' % channel)  # stop table at end

    dev.close()

TTL0 = [MOT_IGBT_no0per1_on, FB_Helmholtz_no0per2_on,MOT_Helmholtz_no0per3_on,
        Cr_ZS_current_no0per4_on,Cr_MOT_AOM_no0per5_on,Cr_TC_AOM_no0per6_on,
        Cr_ZS_AOM_no0per7_on,Cr_mf_pump_no0per8_on,Li_ZS_current_no0per9_on,
        Cr_Andor_trigger_no0per10_on,Li_D2_no0per11_on,Li_D1_no0per12_on,
        Li_MOT_shutter_no0per13_on,img_shutter_no0per14_on,Blue_shutter_no0per15_on,
        FB_IGBT_no0per16_on
]
TTL1 = [
    Stingray_no1per1_on, Li_ZS_AOM_no1per2_on, CrRepumpers_AOMshutter_no1per3_on,
    Li_oven_shutter_no1per4_on, Li_Cooler_no1per5_on, Cr_R1_no1per6_on, Cr_R2_no1per7_on,
    Cr_img_shutter_no1per8_on, Li_img_AOM_no1per9_on, Li_Rep_no1per10_on,
    Current_Green_no1per11_off, Li_img_HF_AOM_no1per12_on, CrRepumpers_Servoshutter_no1per13_on,
    Green_AOM_TTL_no1per14_on, IR_AOM_TTL_no1per15_on, Osci_trigger_no1per16_on]

if __name__ == '__main__':

    t = primary.start_time
    dt = primary.time_step

    # start sequence
    start()

    if False:
        # debug conflicts
        MOT_Helmholtz_no0per3_on.go_high(t)
        #t += dt

        #IR_AOM_no2_percent.constant(t, 5.0)
        Cr_AOM_MOT_60to127MHz_no4_MHz.constant(t, -5.0)

        t += dt
        MOT_IGBT_no0per1_on.go_low(t)
        MOT_Helmholtz_no0per3_on.go_low(t)
        Stingray_no1per1_on.go_low(t)

        t += dt
        IR_AOM_no2_percent.constant(t, 6.0)
        Cr_AOM_MOT_60to127MHz_no4_MHz.constant(t, -6.0)
        Green_AOM_no6_W.constant(t, 1.0)

        t += 0.1

    if False:
        from labscriptlib.FPGA_test.compensation import comp

        # 50Hz compenasion test
        # parameters
        t_step = dt # time between TTL signals
        t_final = 0.2 #19.8e-3 # total time. 200us less than line trigger period of 100ms
        cycles = 1 # repetitions, 0=infinte

        A_comp = compensation
        TTL_comp = [comp_TTL_0, comp_TTL_1, comp_TTL_2, comp_TTL_3, comp_TTL_4, comp_TTL_5, comp_TTL_6, comp_TTL_7,
                    comp_TTL_8, comp_TTL_9, comp_TTL_10, comp_TTL_11, comp_TTL_12, comp_TTL_13, comp_TTL_14, comp_TTL_15]

        # set number of cycles=repetitions and restart bit
        board_comp.set_cycles(cycles=cycles, restart=True)

        # set start, data stop and restart trigger (can be done also in connection table, GUI or with set_ctrl_in)
        board_comp.set_start_trigger('input 2', 'rising edge')
        board_comp.set_stop_trigger('data bits 28-31','offset bit 2')
        board_comp.set_restart_trigger('input 2', 'rising edge')

        # for debugging its nice to have a signal when board is running or waiting
        # 'run' = high while running and restart trigger, low while waiting for start trigger
        # 'wait' = high while waiting for start or restart trigger
        # note: output buffer is inverting
        board_comp.set_ctrl_out({'output 0': ('wait', 'low level')})

        # disable synchronization wait and phase
        board_comp.set_sync_params(0,0)

        # first instruction after start trigger from control system = NOP + STOP bit = waiting for line trigger
        t += dt
        add_time_marker(t, 'wait for line trigger')
        TTL_comp[1].go_high(t)
        TTL0[0].go_high(t)
        #TTL1[2].go_high(t)
        #primary.WAIT(t)
        #primary.SKIP(t, do_not_toggle_STRB=True)
        #board_comp.WAIT(t)
        #board_comp.SKIP(t) # not needed when no other action is at this time, otherwise will disable command
        t += dt # ensures no other action is invalidated by SKIP
        # here is our sequence for testing
        for ttl in TTL_comp:
            ttl.go_high(t)
            t += t_step

        #duration = t_final - (16 * t_step - 2 * dt)*2
        #ms = 1e-3
        #t += A_comp.ramp(t=1*ms, initial=-9.99, final=9.99, duration=5*ms, samplerate=100e3) + dt
        #t += A_comp.rampA_comp,A(t=t_final-6*ms, initial=9.99, final=-9.99, duration=5*ms, samplerate=100e3) + dt

        t = 0.05
        A_comp.constant(t, 0.5)
        t += dt
        A_comp.constant(t, -0.5)
        #primary.SKIP(t, do_not_toggle_STRB=True)

        t = 0.09
        #TTL0[0].go_low(t)
        TTL1[2].go_low(t)
        primary.WAIT(t)
        #primary.SKIP(t,do_not_toggle_STRB=True)

        #comp(t, A_comp, 0.1)

        t = t_final - 16 * t_step - 2 * dt
        for ttl in TTL_comp:
            ttl.go_low(t)
            #t += t_step
        t += dt
        #TTL0[0].go_high(t)
        #t += dt
        TTL1[2].go_high(t)
        t += dt

        if True:
            # do something also on primary board
            IR_AOM_no2_percent.ramp(t=1e-3, initial=0, final=100, duration=5e-3, samplerate=1e3, units="percent")
            #Cr_AOM_MOT_60to127MHz_no4_MHz.constant(t=1e-3 + dt, value=150.0)
        if False:
            for ttl in TTL1[0:3]:
                ttl.go_high(1e-3)

    if False:
        # start/stop/restart trigger test

        primary.set_sync_params(0,0)

        Osci_trigger.go_high(t)
        t += dt
        Osci_trigger.go_low(t)
        t += 0.1 - 5e-6
        Stop_trigger.go_high(t)
        t += 5*dt
        Stop_trigger.go_low(t)
        t+= dt
        Osci_trigger.go_high(t)
        t += dt
        Osci_trigger.go_low(t)
        t += 1.0

    if False:

        #print('ramp duration %.3f ms, rate %.3f Hz' % (ramp_duration, ramp_sample_rate))

        # line trigger test (100k is good 1M not)
        IR_AOM_no2_percent.constant(t, 100, 'percent')
        t += dt*5
        for i in range(100):
            TTL0[0].go_high(t)
            TTL0[1].go_high(t)
            #IR_AOM_no2_percent.constant(t, 100, 'percent')
            t += dt
            TTL0[0].go_low(t)
            TTL0[1].go_low(t)
            #IR_AOM_no2_percent.constant(t, 0, 'percent')
            t += dt

        IR_AOM_no2_percent.ramp(t=0.1, initial=0, final=100, duration=5e-3, samplerate=1e3, units="percent")

        t = 1.0

    if False:
        # switch TTL ON and OFF
        for ttl in TTL:
            ttl.go_high(t)
            t += 0.1
        #t += 0.1
        for ttl in TTL:
            ttl.go_low(t)
            t += 0.1
        t += dt

    if False:
        # generate largge number of digital samples for testing
        # TODO: this has a problem when t_start != 0?
        samples = 1e6
        rate = 1e6
        #t += dt
        channel = TTL0[-1]
        duration = generate_pulses(channel=channel, t_start=t, t_duration=samples / rate, rate=rate, first=1, last=0)
        if board_alt != primary:
            duration = generate_pulses(channel=test_no3per16_on, t_start=t, t_duration=samples / rate, rate=rate, first=1, last=0)
        t += duration + dt

    if True: # Moglabs QRF test. the tricky part is that the QRF can update only every 5us while the bus can do at 1us.
        #MOG_test() # upload table 1x
        delta = 5*dt
        powers = [-9,-6] #,-6,-3,0]
        DDSs = [test_DDS_0, test_DDS_1, test_DDS_2, test_DDS_3]
        t += 5*dt
        if True:
            #for i, dds in enumerate(DDSs):
            #    dds.enable(t)
            DDSs[0].enable(t)
            t += 5*dt
            QRF_0.trigger(t, duration = 5*dt)
            t += dt
            #QRF_trigger_0.go_high(t)
            t += dt
            #QRF_trigger_0.go_low(t)
            t += dt
        else:
            for ttl in TTL0:
                ttl.go_high(t)
            t += dt
            for ttl in TTL1:
                ttl.go_high(t)
        t += 6*dt
        for i, dds in enumerate(DDSs):
            dds.setfreq(t, (100.0 + 10 * i)*1e6)
            dds.setphase(t, 0.0)
            for j,amp in enumerate(powers):
                dds.setamp(t+j*delta, amp)
            #t += dt # interleaved! works with less than 5 devices
            t += delta*(len(powers)+1) + delta
            #t += delta
        t += 17*dt
        DDSs[0].setamp(t, -0.5)
        t += dt
        DDSs[0].setfreq(t, 66.6)
        t += dt
        if True:
            #for i, dds in enumerate(DDSs):
            #    dds.disable(t)
            pass
        else:
            for ttl in TTL0:
                ttl.go_low(t)
            t += dt
            for ttl in TTL1:
                ttl.go_low(t)
        t += dt

    if False:
        # precise ramp test
        # this allows to generate 'interleaved ramps' with constant sample rate without generating time confilcts.

        # the problem with labscript 'ramp' is that labscript generates for all outputs (on the same clockline)
        # values for all times used in any channel. But since our board can execute only one command per time,
        # generate_code above takes only the data where a channel is changing and ensures that no channels change at the same time.
        # this works well for static channels, but with labscript 'ramp' whenever any command is executed in parallel,
        # or a second ramp is executed in parallel, we would get time confilcts since labscript recalculates the ramp values
        # also for these intermediate points outside of the set samplerate, i.e. the value then changing and
        # generate_code will not remove these points which will eventually lead to the time conflict.
        # the solution with precise_ramp is simply to enforce the set samplerate (called 'rate') even when intermediate values are calculated.
        # you have to give two rates to customramp:
        # 'rate' = the true output rate, i.e. the rate of change of the output.
        #   1/rate must be integer multiple of channels*t_ch_offset,
        #   with channels = number of channels which change in parallel,
        #   t_ch_offset = time slot per channel (integer multiple of dt, minimum dt)
        # 'samplerate' = the time resolution of the ramp.
        #   labscript rounds all output times to this resolution.
        #   therefore, this must be <= 1/t_ch_offset.
        # note: conversion from float to integer might still cause time conflicts for high-resolution ramps?
        #   increase t_ch_offset or try increasing samplerate (max. 1/dt).

        # example code with mixture of analog and digital channels operated in parallel.
        # note that 1/analog_ramp_rate and on_duration must be integer multiple of channels * t_ch_offset

        # for testing we choose 2 analog out from primary and 2 from secondary (if exists)
        #if board_alt is not primary:
        #    test_no3per11_on.go_high(t)
        #    t += dt
        #ao_list = [MOT_current_0to100A_no8_A, dont_use_no9_V, Analog_no24_V, Analog_no25_V]
        #do_list = [Stingray_no1per1_on, Li_ZS_AOM_no1per2_on, test_no3per9_on, test_no3per10_on]
        ao_list = [Analog_no8_V, Analog_no9_V, Analog_no24_V, Analog_no25_V]
        do_list = [test_no3per9_on, test_no3per10_on, test_no3per11_on, test_no3per12_on]
        channels = len(ao_list) + len(do_list)  # number of parallel channels
        # get time offset per channel.
        t_ch_offset = dt # time offset between channel
        t_offset = {}
        for i, channel in enumerate(ao_list + do_list):
            t_offset[channel.name] = i*t_ch_offset
            print("channel %i: '%-35s' time slot %i us" % (i, channel.name, t_offset[channel.name]*1e6))
        ramp_duration = 5.1 # fastest is (2^16us)/channels = (0.065536s)/channels
        analog_ramp_rate = 1/(channels*t_ch_offset) # we go at maximum sample rate
        digital_toggles = 10; # for digital we go slower and toggle state this times
        on_duration = quantize(ramp_duration / (2*digital_toggles), t_ch_offset*channels)
        # parallel analog ramps
        for i,ao in enumerate(ao_list):
            if (i & 1) == 0:
                start = -10
                end   = 10
            else:
                start = 10
                end  = -10
            ao.customramp(t + t_offset[ao.name], function=precise_ramp, initial=start, final=end, duration=ramp_duration, samplerate=1/t_ch_offset, rate=analog_ramp_rate, name='ananlog ramp %i'%i)
        # parallel digital outputs
        #t += 5.0
        for i,do in enumerate(do_list):
            for j in range(digital_toggles):
                do.go_high(t + t_offset[do.name] + 2*j*on_duration)
                do.go_low (t + t_offset[do.name] + (2*j+1)*on_duration)
        # shortest time after ramps finished
        t += (channels-1) * t_ch_offset + ramp_duration + dt

    if False: # analog ramp test
        check_ramp = True  # compare generated ramps after stop()
        samples = 2**10  # the true number of samples can be larger (typically by 1-2, but depends on number of samples)
        t_step = dt * 50
        duration = samples * t_step
        t = 0.0
        # ramp all channels
        do = [Stingray_no1per1_on, Li_ZS_AOM_no1per2_on, CrRepumpers_AOMshutter_no1per3_on, Li_oven_shutter_no1per4_on]
        for i,ao in enumerate([test_ao_0,test_ao_1,test_ao_2,test_ao_3]):
            do[i].go_high(t)
            t += dt
            t += ao.ramp(t=t, initial=  0.0, final= 10.0, duration=1*duration, samplerate=1 / t_step) + dt
            t += ao.ramp(t=t, initial= 10.0, final=-10.0, duration=2*duration, samplerate=1 / t_step) + dt
            t += ao.ramp(t=t, initial=-10.0, final=  0.0, duration=1*duration, samplerate=1 / t_step) + dt
            do[i].go_low(t)
            t += dt
    elif False: # Andi_test.prg
        Li_oven_shutter_no1per4_on.go_high(0.000001)
        Cr_img_shutter_no1per8_on.go_low(0.000005)
        CrRepumpers_AOMshutter_no1per3_on.go_high(0.000009)
        Li_D1_no0per12_on.go_low(0.000010)
        Cr_AOM_MOT_60to127MHz_no4_MHz.constant(0.000011, 115.3, 'MHz')
        Li_Rep_no1per10_on.go_high(0.000012)
        Cr_AOM_TC_70to115MHz_no5_MHz.constant(0.000013, 122.0, 'MHz')
        Li_MOT_shutter_no0per13_on.go_high(0.000014)
        Li_Cooler_no1per5_on.go_high(0.000016)
        Li_cool_int_no7_percent.constant(0.000018, 100.0, 'percent')
        Li_rep_int_no13_percent.constant(0.000020, 100.0, 'percent')
        Cr_AOM_MOT_int_no16_percent.constant(0.000021, 50.0, 'percent')
        Cr_MOT_AOM_no0per5_on.go_high(0.000023)
        Li_cooling_no10_MHz.constant(0.000024, 83.0, 'MHz')
        Cr_TC_AOM_no0per6_on.go_high(0.000025)
        Li_repumper_no11_MHz.constant(0.000026, 200.0, 'MHz')
        Cr_ZS_AOM_no0per7_on.go_high(0.000027)
        Li_ZS_AOM_no1per2_on.go_high(0.000028)
        Cr_R2_no1per7_on.go_high(0.000029)
        Cr_R1_no1per6_on.go_high(0.000031)
        Li_ZS_AOM_74to140MHz_no12_MHz.constant(0.000032, 85.0, 'MHz')
        Li_D2_no0per11_on.go_high(0.000038)
        Cr_AOM_R1_int_no17_percent.constant(0.000047, 100.0, 'percent')
        CrRepumpers_Servoshutter_no1per13_on.go_high(0.000054)
        CrBlueRep_shutter_no3per4_on.go_high(0.000106)
        Blue_shutter_no0per15_on.go_high(0.000108)
        Comp_coils_Z_ON_no3per3_on.go_high(0.000109)
        Comp_coils_Y_ON_no3per5_on.go_high(0.000111)
        CompCoil_z_no20_A.constant(0.000113, 0.7, 'A')
        Li_oven_shutter_no1per4_on.go_low(0.000313)
        Li_oven_shutter_no1per4_on.go_high(0.000521)
        Li_oven_shutter_no1per4_on.go_low(0.000729)
        Li_oven_shutter_no1per4_on.go_high(0.000833)
        Li_oven_shutter_no1per4_on.go_low(0.000937)
        Osci_trigger_no1per16_on.go_high(1.000000)
        t = 1.0

    elif False: # init full sequence
        Li_oven_shutter_no1per4_on.go_high(0.000001)
        FBtoMOT_AntitoParallel_no3per2.go_low(0.000002)
        Blue_shutter_no0per15_on.go_high(0.000007)
        Li_ZS_current_no0per9_on.go_high(0.000030)
        Cr_ZS_current_no0per4_on.go_high(0.000051)
        Li_img_HF_AOM350_ON_no3per6_on.go_low(0.000060)
        Li_img_HF_AOM_no1per12_on.go_low(0.000062)
        Cr_mf_pump_no0per8_on.go_low(0.000064)
        DDS_no32_index.constant(0.000100, 0.0, 'index')
        Li_oven_shutter_no1per4_on.go_low(0.000313)
        MOT_current_0to100A_no8_A.constant(0.000500, 0.0, 'A')
        Li_oven_shutter_no1per4_on.go_high(0.000521)
        Li_oven_shutter_no1per4_on.go_low(0.000729)
        Li_oven_shutter_no1per4_on.go_high(0.000833)
        IR_laser_no3_W.constant(0.000900, 0.0, 'W')
        Crossed_AOM_no18_percent.constant(0.000920, 0.0, 'percent')
        Crossed_green_no3per7_on.go_low(0.000930)
        Li_oven_shutter_no1per4_on.go_low(0.000937)
        Crossed_Green_no19_W.constant(0.000940, 0.0, 'W')
        Current_Green_no1per11_off.go_high(0.000950)
        IR_AOM_TTL_no1per15_on.go_low(0.001000)
        Green_AOM_TTL_no1per14_on.go_low(0.001100)
        MOT_IGBT_no0per1_on.go_low(0.001500)
        FB_Helmholtz_no0per2_on.go_low(0.002000)
        FBtoMOT_AntitoParallel_no3per2.go_low(0.002001)
        MOT_Helmholtz_no0per3_on.go_low(0.002500)
        Cr_img_shutter_no1per8_on.go_low(0.010005)
        CrRepumpers_AOMshutter_no1per3_on.go_high(0.010009)
        Cr_AOM_MOT_60to127MHz_no4_MHz.constant(0.010011, 115.3, 'MHz')
        Cr_AOM_TC_70to115MHz_no5_MHz.constant(0.010013, 122.0, 'MHz')
        Cr_AOM_MOT_int_no16_percent.constant(0.010021, 50.0, 'percent')
        Cr_MOT_AOM_no0per5_on.go_high(0.010023)
        Cr_TC_AOM_no0per6_on.go_high(0.010025)
        Cr_ZS_AOM_no0per7_on.go_high(0.010027)
        Cr_R2_no1per7_on.go_high(0.010029)
        Cr_R1_no1per6_on.go_high(0.010031)
        Cr_AOM_R1_int_no17_percent.constant(0.010047, 100.0, 'percent')
        CrBlueRep_shutter_no3per4_on.go_high(0.010106)
        Blue_shutter_no0per15_on.go_high(0.010108)
        Comp_coils_Z_ON_no3per3_on.go_high(0.010109)
        Comp_coils_Y_ON_no3per5_on.go_high(0.010111)
        CompCoil_z_no20_A.constant(0.010113, 0.7, 'A')
        Li_MOT_shutter_no0per13_on.go_high(0.020000)
        MOT_IGBT_no0per1_on.go_high(0.035500)
        MOT_current_0to100A_no8_A.constant(0.036000, 45.0, 'A')
        img_shutter_no0per14_on.go_low(0.050004)
        CrRepumpers_Servoshutter_no1per13_on.go_high(0.050008)
        Li_D1_no0per12_on.go_low(0.050010)
        Li_Rep_no1per10_on.go_high(0.050012)
        Li_MOT_shutter_no0per13_on.go_high(0.050014)
        Li_Cooler_no1per5_on.go_high(0.050016)
        Li_cool_int_no7_percent.constant(0.050018, 100.0, 'percent')
        Li_rep_int_no13_percent.constant(0.050020, 50.0, 'percent')
        Li_cooling_no10_MHz.constant(0.050024, 75.5, 'MHz')
        Li_repumper_no11_MHz.constant(0.050026, 194.0, 'MHz')
        Li_ZS_AOM_no1per2_on.go_high(0.050028)
        Li_ZS_AOM_74to140MHz_no12_MHz.constant(0.050032, 85.0, 'MHz')
        Li_D2_no0per11_on.go_high(0.050038)
        t = 0.050038 + 1.0

        if False: # full sequence
            CrRepumpers_Servoshutter_no1per13_on.go_low(5.900000)
            Li_ZS_AOM_no1per2_on.go_low(5.999004)
            Li_ZS_current_no0per9_on.go_low(6.000000)
            MOT_current_0to100A_no8_A.constant(6.000003, 25.0, 'A')
            Li_cool_int_no7_percent.constant(6.000018, 100.0, 'percent')
            Li_rep_int_no13_percent.constant(6.000020, 100.0, 'percent')
            Li_cooling_no10_MHz.constant(6.000024, 82.0, 'MHz')
            Li_repumper_no11_MHz.constant(6.000026, 194.0, 'MHz')
            Li_ZS_AOM_no1per2_on.go_high(6.030000)
            Li_ZS_AOM_74to140MHz_no12_MHz.constant(6.035000, 125.0, 'MHz')
            Green_AOM_TTL_no1per14_on.go_low(7.797035)
            Current_Green_no1per11_off.go_low(7.798035)
            Li_Cooler_no1per5_on.go_high(7.900004)
            Li_cooling_no10_MHz.constant(7.900008, 91.0, 'MHz')
            Li_repumper_no11_MHz.constant(7.900010, 194.0, 'MHz')
            Li_cool_int_no7_percent.constant(7.900012, 100.0, 'percent')
            Li_rep_int_no13_percent.constant(7.900014, 35.0, 'percent')
            FB_current_0to200A_no14_A.constant(7.919100, 0.0, 'A')
            FB_IGBT_no0per16_on.go_high(7.939098)
            MOT_current_0to100A_no8_A.constant(7.939100, 25.0, 'A')
            FB_current_0to200A_no14_A.constant(7.939600, 0.0, 'A')
            MOT_current_0to100A_no8_A.constant(7.940153, 23.6842, 'A')
            FB_current_0to200A_no14_A.constant(7.940653, 1.3158, 'A')
            MOT_current_0to100A_no8_A.constant(7.941205, 22.3684, 'A')
            FB_current_0to200A_no14_A.constant(7.941705, 2.6316, 'A')
            MOT_current_0to100A_no8_A.constant(7.942258, 21.0526, 'A')
            FB_current_0to200A_no14_A.constant(7.942758, 3.9474, 'A')
            MOT_current_0to100A_no8_A.constant(7.943311, 19.7368, 'A')
            FB_current_0to200A_no14_A.constant(7.943811, 5.2632, 'A')
            MOT_current_0to100A_no8_A.constant(7.944363, 18.4211, 'A')
            FB_current_0to200A_no14_A.constant(7.944863, 6.5789, 'A')
            MOT_current_0to100A_no8_A.constant(7.945416, 17.1053, 'A')
            FB_current_0to200A_no14_A.constant(7.945916, 7.8947, 'A')
            MOT_current_0to100A_no8_A.constant(7.946468, 15.7895, 'A')
            FB_current_0to200A_no14_A.constant(7.946968, 9.2105, 'A')
            MOT_current_0to100A_no8_A.constant(7.947521, 14.4737, 'A')
            FB_current_0to200A_no14_A.constant(7.948021, 10.5263, 'A')
            MOT_current_0to100A_no8_A.constant(7.948574, 13.1579, 'A')
            FB_current_0to200A_no14_A.constant(7.949074, 11.8421, 'A')
            MOT_current_0to100A_no8_A.constant(7.949626, 11.8421, 'A')
            FB_current_0to200A_no14_A.constant(7.950126, 13.1579, 'A')
            MOT_current_0to100A_no8_A.constant(7.950679, 10.5263, 'A')
            FB_current_0to200A_no14_A.constant(7.951179, 14.4737, 'A')
            MOT_current_0to100A_no8_A.constant(7.951732, 9.2105, 'A')
            FB_current_0to200A_no14_A.constant(7.952232, 15.7895, 'A')
            MOT_current_0to100A_no8_A.constant(7.952784, 7.8947, 'A')
            FB_current_0to200A_no14_A.constant(7.953284, 17.1053, 'A')
            MOT_current_0to100A_no8_A.constant(7.953837, 6.5789, 'A')
            FB_current_0to200A_no14_A.constant(7.954337, 18.4211, 'A')
            MOT_current_0to100A_no8_A.constant(7.954889, 5.2632, 'A')
            MOT_Helmholtz_no0per3_on.go_high(7.955110)
            FB_current_0to200A_no14_A.constant(7.955389, 19.7368, 'A')
            MOT_current_0to100A_no8_A.constant(7.955942, 3.9474, 'A')
            FB_current_0to200A_no14_A.constant(7.956442, 21.0526, 'A')
            MOT_current_0to100A_no8_A.constant(7.956995, 2.6316, 'A')
            FB_current_0to200A_no14_A.constant(7.957495, 22.3684, 'A')
            MOT_current_0to100A_no8_A.constant(7.958047, 1.3158, 'A')
            FB_current_0to200A_no14_A.constant(7.958547, 23.6842, 'A')
            MOT_current_0to100A_no8_A.constant(7.959100, 0.0, 'A')
            FB_current_0to200A_no14_A.constant(7.959600, 25.0, 'A')
            MOT_IGBT_no0per1_on.go_low(7.960100)
            Cr_ZS_current_no0per4_on.go_low(7.975751)
            Cr_ZS_AOM_no0per7_on.go_low(7.975851)
            Cr_TC_AOM_no0per6_on.go_low(7.975951)
            IR_AOM_TTL_no1per15_on.go_low(7.986031)
            IR_laser_no3_W.constant(7.987031, 0.0, 'W')
            Cr_AOM_MOT_int_no16_percent.constant(7.996903, 55.0, 'percent')
            IR_AOM_no2_percent.constant(7.996911, 100.0, 'percent')
            Green_AOM_TTL_no1per14_on.go_high(7.996935)
            Cr_AOM_MOT_60to127MHz_no4_MHz.constant(7.997003, 117.5, 'MHz')
            FB_current_0to200A_no14_A.constant(7.997004, 25.0, 'A')
            IR_AOM_TTL_no1per15_on.go_high(7.997031)
            IR_laser_no3_W.constant(7.997034, 0.0, 'W')
            Green_AOM_no6_W.constant(7.997038, 0.0, 'W')
            IR_laser_no3_W.constant(7.997334, 13.0, 'W')
            Green_AOM_no6_W.constant(7.997338, 0.048, 'W')
            FB_current_0to200A_no14_A.constant(7.997504, 22.5, 'A')
            IR_laser_no3_W.constant(7.997633, 26.0, 'W')
            Green_AOM_no6_W.constant(7.997637, 0.096, 'W')
            IR_laser_no3_W.constant(7.997933, 39.0, 'W')
            Green_AOM_no6_W.constant(7.997937, 0.144, 'W')
            FB_current_0to200A_no14_A.constant(7.998004, 20.0, 'A')
            IR_laser_no3_W.constant(7.998233, 52.0, 'W')
            Green_AOM_no6_W.constant(7.998237, 0.192, 'W')
            Li_repumper_no11_MHz.constant(7.998494, 212.4, 'MHz')
            Li_cooling_no10_MHz.constant(7.998496, 97.8, 'MHz')
            Li_cool_int_no7_percent.constant(7.998498, 5.8, 'percent')
            Li_rep_int_no13_percent.constant(7.998500, 2.9, 'percent')
            FB_current_0to200A_no14_A.constant(7.998504, 17.5, 'A')
            IR_laser_no3_W.constant(7.998532, 65.0, 'W')
            Green_AOM_no6_W.constant(7.998536, 0.24, 'W')
            Cr_AOM_R1_int_no17_percent.constant(7.998701, 100.0, 'percent')
            Cr_AOM_MOT_int_no16_percent.constant(7.998702, 13.0, 'percent')
            Cr_AOM_MOT_60to127MHz_no4_MHz.constant(7.998704, 119.9, 'MHz')
            IR_laser_no3_W.constant(7.998832, 78.0, 'W')
            Green_AOM_no6_W.constant(7.998836, 0.288, 'W')
            FB_current_0to200A_no14_A.constant(7.999004, 15.0, 'A')
            IR_laser_no3_W.constant(7.999132, 91.0, 'W')
            Green_AOM_no6_W.constant(7.999136, 0.336, 'W')
            IR_laser_no3_W.constant(7.999432, 104.0, 'W')
            Green_AOM_no6_W.constant(7.999436, 0.384, 'W')
            FB_current_0to200A_no14_A.constant(7.999503, 12.5, 'A')
            IR_laser_no3_W.constant(7.999731, 117.0, 'W')
            Green_AOM_no6_W.constant(7.999735, 0.432, 'W')
            CrRepumpers_AOMshutter_no1per3_on.go_low(7.999999)
            FB_current_0to200A_no14_A.constant(8.000003, 10.0, 'A')
            IR_laser_no3_W.constant(8.000031, 130.0, 'W')
            Green_AOM_no6_W.constant(8.000035, 0.48, 'W')
            FB_current_0to200A_no14_A.constant(8.000503, 7.5, 'A')
            FB_current_0to200A_no14_A.constant(8.001003, 5.0, 'A')
            Blue_shutter_no0per15_on.go_low(8.001233)
            CompCoil_z_no20_A.constant(8.001501, 2.0, 'A')
            FB_current_0to200A_no14_A.constant(8.001503, 2.5, 'A')
            CrBlueRep_shutter_no3per4_on.go_low(8.001831)
            FB_current_0to200A_no14_A.constant(8.002003, 0.0, 'A')
            Li_MOT_shutter_no0per13_on.go_low(8.003300)
            FB_IGBT_no0per16_on.go_low(8.004620)
            MOT_IGBT_no0per1_on.go_low(8.004622)
            MOT_current_0to100A_no8_A.constant(8.004624, 0.0, 'A')
            FB_current_0to200A_no14_A.constant(8.004626, 0.0, 'A')
            Li_ZS_current_no0per9_on.go_low(8.004628)
            Li_Rep_no1per10_on.go_low(8.004691)
            Li_Cooler_no1per5_on.go_low(8.004723)
            Li_D2_no0per11_on.go_low(8.004725)
            Li_D1_no0per12_on.go_low(8.004727)
            Cr_MOT_AOM_no0per5_on.go_low(8.004816)
            Cr_AOM_MOT_int_no16_percent.constant(8.004821, 0.0, 'percent')
            Cr_R2_no1per7_on.go_low(8.004828)
            Cr_R1_no1per6_on.go_low(8.004830)
            Cr_AOM_R1_int_no17_percent.constant(8.004832, 0.0, 'percent')
            Cr_AOM_TC_70to115MHz_no5_MHz.constant(8.004842, 100.0, 'MHz')
            Cr_AOM_MOT_60to127MHz_no4_MHz.constant(8.004843, 75.0, 'MHz')
            Li_repumper_no11_MHz.constant(8.007802, 190.6, 'MHz')
            Li_cooling_no10_MHz.constant(8.007804, 77.35, 'MHz')
            Li_D1_no0per12_on.go_high(8.007880)
            Li_Rep_no1per10_on.go_low(8.007896)
            Li_Cooler_no1per5_on.go_low(8.007898)
            Li_cool_int_no7_percent.constant(8.007906, 100.0, 'percent')
            Li_rep_int_no13_percent.constant(8.007908, 25.0, 'percent')
            Li_Cooler_no1per5_on.go_high(8.008000)
            Li_Rep_no1per10_on.go_high(8.008002)
            Li_Rep_no1per10_on.go_low(8.008312)
            Li_Cooler_no1per5_on.go_low(8.008334)
            Li_D1_no0per12_on.go_low(8.008336)
            Li_rep_int_no13_percent.constant(8.008338, 0.0, 'percent')
            Li_cool_int_no7_percent.constant(8.008339, 0.0, 'percent')
            MOT_IGBT_no0per1_on.go_high(8.008500)
            Comp_coils_Y_ON_no3per5_on.go_low(8.009021)
            Comp_coils_Z_ON_no3per3_on.go_low(8.009025)
            CompCoil_z_no20_A.constant(8.009500, 0.0, 'A')
            Green_AOM_no6_W.constant(8.010004, 0.5, 'W')
            Green_AOM_no6_W.constant(8.011542, 1.0, 'W')
            Green_AOM_no6_W.constant(8.013081, 1.5, 'W')
            Green_AOM_no6_W.constant(8.014619, 2.0, 'W')
            MOT_current_0to100A_no8_A.constant(8.015001, 10.0, 'A')
            MOT_current_0to100A_no8_A.constant(8.015501, 10.99, 'A')
            MOT_current_0to100A_no8_A.constant(8.016001, 11.98, 'A')
            Green_AOM_no6_W.constant(8.016158, 2.5, 'W')
            MOT_current_0to100A_no8_A.constant(8.016501, 12.97, 'A')
            MOT_current_0to100A_no8_A.constant(8.017001, 13.96, 'A')
            MOT_current_0to100A_no8_A.constant(8.017501, 14.95, 'A')
            Green_AOM_no6_W.constant(8.017696, 3.0, 'W')
            MOT_current_0to100A_no8_A.constant(8.018001, 15.94, 'A')
            MOT_current_0to100A_no8_A.constant(8.018501, 16.93, 'A')
            MOT_current_0to100A_no8_A.constant(8.019001, 17.92, 'A')
            Green_AOM_no6_W.constant(8.019235, 3.5, 'W')
            MOT_current_0to100A_no8_A.constant(8.019501, 18.91, 'A')
            MOT_current_0to100A_no8_A.constant(8.020001, 19.9, 'A')
            MOT_current_0to100A_no8_A.constant(8.020501, 20.89, 'A')
            Green_AOM_no6_W.constant(8.020773, 4.0, 'W')
            MOT_current_0to100A_no8_A.constant(8.021001, 21.88, 'A')
            MOT_current_0to100A_no8_A.constant(8.021501, 22.87, 'A')
            MOT_current_0to100A_no8_A.constant(8.022001, 23.86, 'A')
            Green_AOM_no6_W.constant(8.022312, 4.5, 'W')
            MOT_current_0to100A_no8_A.constant(8.022501, 24.85, 'A')
            MOT_current_0to100A_no8_A.constant(8.023001, 25.84, 'A')
            MOT_current_0to100A_no8_A.constant(8.023501, 26.83, 'A')
            Green_AOM_no6_W.constant(8.023850, 5.0, 'W')
            MOT_current_0to100A_no8_A.constant(8.024001, 27.82, 'A')
            MOT_current_0to100A_no8_A.constant(8.024501, 28.81, 'A')
            MOT_current_0to100A_no8_A.constant(8.025001, 29.8, 'A')
            Green_AOM_no6_W.constant(8.025389, 5.5, 'W')
            MOT_current_0to100A_no8_A.constant(8.025501, 30.79, 'A')
            MOT_current_0to100A_no8_A.constant(8.026001, 31.78, 'A')
            MOT_current_0to100A_no8_A.constant(8.026501, 32.77, 'A')
            Green_AOM_no6_W.constant(8.026927, 6.0, 'W')
            MOT_current_0to100A_no8_A.constant(8.027001, 33.76, 'A')
            MOT_current_0to100A_no8_A.constant(8.027501, 34.75, 'A')
            MOT_current_0to100A_no8_A.constant(8.028001, 35.74, 'A')
            Green_AOM_no6_W.constant(8.028466, 6.5, 'W')
            MOT_current_0to100A_no8_A.constant(8.028501, 36.73, 'A')
            MOT_current_0to100A_no8_A.constant(8.029001, 37.72, 'A')
            MOT_current_0to100A_no8_A.constant(8.029501, 38.71, 'A')
            MOT_current_0to100A_no8_A.constant(8.030001, 39.7, 'A')
            Green_AOM_no6_W.constant(8.030004, 7.0, 'W')
            MOT_current_0to100A_no8_A.constant(8.030501, 40.69, 'A')
            MOT_current_0to100A_no8_A.constant(8.031001, 41.68, 'A')
            MOT_current_0to100A_no8_A.constant(8.031501, 42.67, 'A')
            MOT_current_0to100A_no8_A.constant(8.032001, 43.66, 'A')
            MOT_current_0to100A_no8_A.constant(8.032501, 44.65, 'A')
            MOT_current_0to100A_no8_A.constant(8.033001, 45.64, 'A')
            MOT_current_0to100A_no8_A.constant(8.033501, 46.63, 'A')
            MOT_current_0to100A_no8_A.constant(8.034001, 47.62, 'A')
            MOT_current_0to100A_no8_A.constant(8.034501, 48.61, 'A')
            Cr_R1_no1per6_on.go_high(8.034810)
            Cr_AOM_R1_int_no17_percent.constant(8.034832, 100.0, 'percent')
            Cr_R2_no1per7_on.go_high(8.034850)
            Cr_ZS_AOM_no0per7_on.go_high(8.034870)
            Cr_TC_AOM_no0per6_on.go_high(8.034890)
            Cr_AOM_MOT_int_no16_percent.constant(8.034950, 100.0, 'percent')
            MOT_current_0to100A_no8_A.constant(8.035001, 49.6, 'A')
            MOT_current_0to100A_no8_A.constant(8.035501, 50.59, 'A')
            MOT_current_0to100A_no8_A.constant(8.036001, 51.58, 'A')
            MOT_current_0to100A_no8_A.constant(8.036501, 52.57, 'A')
            MOT_current_0to100A_no8_A.constant(8.037001, 53.56, 'A')
            MOT_current_0to100A_no8_A.constant(8.037501, 54.55, 'A')
            Li_D2_no0per11_on.go_high(8.038000)
            MOT_current_0to100A_no8_A.constant(8.038001, 55.54, 'A')
            Li_Rep_no1per10_on.go_high(8.038002)
            Li_Cooler_no1per5_on.go_high(8.038004)
            Li_rep_int_no13_percent.constant(8.038006, 100.0, 'percent')
            Li_cool_int_no7_percent.constant(8.038007, 100.0, 'percent')
            Li_repumper_no11_MHz.constant(8.038008, 200.0, 'MHz')
            Li_ZS_AOM_no1per2_on.go_high(8.038010)
            Li_ZS_AOM_74to140MHz_no12_MHz.constant(8.038012, 125.0, 'MHz')
            MOT_current_0to100A_no8_A.constant(8.038501, 56.53, 'A')
            MOT_current_0to100A_no8_A.constant(8.039001, 57.52, 'A')
            MOT_current_0to100A_no8_A.constant(8.039501, 58.51, 'A')
            MOT_current_0to100A_no8_A.constant(8.040001, 59.5, 'A')
            IR_laser_no3_W.constant(8.040002, 130.0, 'W')
            MOT_current_0to100A_no8_A.constant(8.040500, 60.49, 'A')
            MOT_current_0to100A_no8_A.constant(8.041000, 61.48, 'A')
            MOT_current_0to100A_no8_A.constant(8.041500, 62.47, 'A')
            MOT_current_0to100A_no8_A.constant(8.042000, 63.46, 'A')
            IR_laser_no3_W.constant(8.042002, 125.0278, 'W')
            MOT_current_0to100A_no8_A.constant(8.042500, 64.45, 'A')
            MOT_current_0to100A_no8_A.constant(8.043000, 65.44, 'A')
            MOT_current_0to100A_no8_A.constant(8.043500, 66.43, 'A')
            MOT_current_0to100A_no8_A.constant(8.044000, 67.42, 'A')
            IR_laser_no3_W.constant(8.044002, 120.3762, 'W')
            MOT_current_0to100A_no8_A.constant(8.044500, 68.41, 'A')
            MOT_current_0to100A_no8_A.constant(8.045000, 69.4, 'A')
            MOT_current_0to100A_no8_A.constant(8.045500, 70.39, 'A')
            MOT_current_0to100A_no8_A.constant(8.046000, 71.38, 'A')
            IR_laser_no3_W.constant(8.046002, 116.0246, 'W')
            MOT_current_0to100A_no8_A.constant(8.046500, 72.37, 'A')
            MOT_current_0to100A_no8_A.constant(8.047000, 73.36, 'A')
            MOT_current_0to100A_no8_A.constant(8.047500, 74.35, 'A')
            MOT_current_0to100A_no8_A.constant(8.048000, 75.34, 'A')
            IR_laser_no3_W.constant(8.048002, 111.9537, 'W')
            MOT_current_0to100A_no8_A.constant(8.048500, 76.33, 'A')
            MOT_current_0to100A_no8_A.constant(8.049000, 77.32, 'A')
            MOT_current_0to100A_no8_A.constant(8.049500, 78.31, 'A')
            MOT_current_0to100A_no8_A.constant(8.050000, 79.3, 'A')
            IR_laser_no3_W.constant(8.050002, 108.1453, 'W')
            MOT_current_0to100A_no8_A.constant(8.050500, 80.29, 'A')
            MOT_current_0to100A_no8_A.constant(8.051000, 81.28, 'A')
            MOT_current_0to100A_no8_A.constant(8.051500, 82.27, 'A')
            MOT_current_0to100A_no8_A.constant(8.052000, 83.26, 'A')
            IR_laser_no3_W.constant(8.052002, 104.5825, 'W')
            MOT_current_0to100A_no8_A.constant(8.052500, 84.25, 'A')
            MOT_current_0to100A_no8_A.constant(8.053000, 85.24, 'A')
            MOT_current_0to100A_no8_A.constant(8.053500, 86.23, 'A')
            MOT_current_0to100A_no8_A.constant(8.054000, 87.22, 'A')
            IR_laser_no3_W.constant(8.054002, 101.2495, 'W')
            MOT_current_0to100A_no8_A.constant(8.054500, 88.21, 'A')
            MOT_current_0to100A_no8_A.constant(8.055000, 89.2, 'A')
            MOT_current_0to100A_no8_A.constant(8.055500, 90.19, 'A')
            MOT_current_0to100A_no8_A.constant(8.056000, 91.18, 'A')
            IR_laser_no3_W.constant(8.056002, 98.1314, 'W')
            MOT_current_0to100A_no8_A.constant(8.056500, 92.17, 'A')
            MOT_current_0to100A_no8_A.constant(8.057000, 93.16, 'A')
            MOT_current_0to100A_no8_A.constant(8.057500, 94.15, 'A')
            MOT_current_0to100A_no8_A.constant(8.058000, 95.14, 'A')
            IR_laser_no3_W.constant(8.058002, 95.2145, 'W')
            MOT_current_0to100A_no8_A.constant(8.058500, 96.13, 'A')
            MOT_current_0to100A_no8_A.constant(8.059000, 97.12, 'A')
            MOT_current_0to100A_no8_A.constant(8.059500, 98.11, 'A')
            MOT_current_0to100A_no8_A.constant(8.060000, 99.1, 'A')
            IR_laser_no3_W.constant(8.060002, 92.4856, 'W')
            MOT_current_0to100A_no8_A.constant(8.060500, 100.09, 'A')
            MOT_current_0to100A_no8_A.constant(8.061000, 101.08, 'A')
            MOT_current_0to100A_no8_A.constant(8.061500, 102.07, 'A')
            MOT_current_0to100A_no8_A.constant(8.062000, 103.06, 'A')
            IR_laser_no3_W.constant(8.062002, 89.9328, 'W')
            MOT_current_0to100A_no8_A.constant(8.062500, 104.05, 'A')
            MOT_current_0to100A_no8_A.constant(8.063000, 105.04, 'A')
            MOT_current_0to100A_no8_A.constant(8.063500, 106.03, 'A')
            MOT_current_0to100A_no8_A.constant(8.064000, 107.02, 'A')
            IR_laser_no3_W.constant(8.064002, 87.5446, 'W')
            MOT_current_0to100A_no8_A.constant(8.064500, 108.01, 'A')
            MOT_current_0to100A_no8_A.constant(8.065000, 109.0, 'A')
            IR_laser_no3_W.constant(8.066002, 85.3104, 'W')
            IR_laser_no3_W.constant(8.068002, 83.2203, 'W')
            IR_laser_no3_W.constant(8.070002, 81.265, 'W')
            IR_laser_no3_W.constant(8.072002, 79.4358, 'W')
            IR_laser_no3_W.constant(8.074002, 77.7245, 'W')
            IR_laser_no3_W.constant(8.076002, 76.1237, 'W')
            IR_laser_no3_W.constant(8.078002, 74.626, 'W')
            IR_laser_no3_W.constant(8.080002, 73.225, 'W')
            IR_laser_no3_W.constant(8.082002, 71.9143, 'W')
            IR_laser_no3_W.constant(8.084002, 70.6881, 'W')
            IR_laser_no3_W.constant(8.086002, 69.5411, 'W')
            IR_laser_no3_W.constant(8.088002, 68.468, 'W')
            IR_laser_no3_W.constant(8.090002, 67.4641, 'W')
            IR_laser_no3_W.constant(8.092001, 66.5249, 'W')
            IR_laser_no3_W.constant(8.094001, 65.6463, 'W')
            IR_laser_no3_W.constant(8.096001, 64.8244, 'W')
            IR_laser_no3_W.constant(8.098001, 64.0555, 'W')
            IR_laser_no3_W.constant(8.100001, 63.3362, 'W')
            IR_laser_no3_W.constant(8.102001, 62.6632, 'W')
            IR_laser_no3_W.constant(8.104001, 62.0337, 'W')
            IR_laser_no3_W.constant(8.106001, 61.4448, 'W')
            IR_laser_no3_W.constant(8.108001, 60.8938, 'W')
            IR_laser_no3_W.constant(8.110001, 60.3784, 'W')
            IR_laser_no3_W.constant(8.112001, 59.8962, 'W')
            IR_laser_no3_W.constant(8.114001, 59.4451, 'W')
            IR_laser_no3_W.constant(8.116001, 59.0232, 'W')
            IR_laser_no3_W.constant(8.118001, 58.6284, 'W')
            IR_laser_no3_W.constant(8.120001, 58.2591, 'W')
            IR_laser_no3_W.constant(8.122001, 57.9136, 'W')
            IR_laser_no3_W.constant(8.124001, 57.5903, 'W')
            IR_laser_no3_W.constant(8.126001, 57.288, 'W')
            IR_laser_no3_W.constant(8.128001, 57.0051, 'W')
            IR_laser_no3_W.constant(8.130001, 56.7405, 'W')
            IR_laser_no3_W.constant(8.132001, 56.4929, 'W')
            IR_laser_no3_W.constant(8.134001, 56.2613, 'W')
            IR_laser_no3_W.constant(8.136001, 56.0447, 'W')
            IR_laser_no3_W.constant(8.138001, 55.842, 'W')
            IR_laser_no3_W.constant(8.140001, 55.6524, 'W')
            IR_laser_no3_W.constant(8.142001, 55.475, 'W')
            IR_laser_no3_W.constant(8.144001, 55.309, 'W')
            IR_laser_no3_W.constant(8.146001, 55.1538, 'W')
            IR_laser_no3_W.constant(8.148001, 55.0086, 'W')
            IR_laser_no3_W.constant(8.150001, 54.8727, 'W')
            IR_laser_no3_W.constant(8.152001, 54.7456, 'W')
            IR_laser_no3_W.constant(8.154001, 54.6267, 'W')
            IR_laser_no3_W.constant(8.156001, 54.5154, 'W')
            IR_laser_no3_W.constant(8.158001, 54.4114, 'W')
            IR_laser_no3_W.constant(8.160001, 54.314, 'W')
            IR_laser_no3_W.constant(8.162001, 54.223, 'W')
            IR_laser_no3_W.constant(8.164001, 54.1378, 'W')
            IR_laser_no3_W.constant(8.166001, 54.0581, 'W')
            IR_laser_no3_W.constant(8.168001, 53.9835, 'W')
            IR_laser_no3_W.constant(8.170001, 53.9137, 'W')
            IR_laser_no3_W.constant(8.172001, 53.8485, 'W')
            IR_laser_no3_W.constant(8.174001, 53.7874, 'W')
            IR_laser_no3_W.constant(8.176001, 53.7303, 'W')
            IR_laser_no3_W.constant(8.178001, 53.6769, 'W')
            IR_laser_no3_W.constant(8.180001, 53.6269, 'W')
            IR_laser_no3_W.constant(8.182001, 53.5801, 'W')
            IR_laser_no3_W.constant(8.184001, 53.5364, 'W')
            IR_laser_no3_W.constant(8.186001, 53.4955, 'W')
            IR_laser_no3_W.constant(8.188001, 53.4572, 'W')
            IR_laser_no3_W.constant(8.190000, 53.4214, 'W')
            IR_laser_no3_W.constant(8.192000, 53.3879, 'W')
            IR_laser_no3_W.constant(8.194000, 53.3565, 'W')
            IR_laser_no3_W.constant(8.196000, 53.3272, 'W')
            IR_laser_no3_W.constant(8.198000, 53.2998, 'W')
            IR_laser_no3_W.constant(8.200000, 53.2741, 'W')
            IR_laser_no3_W.constant(8.202000, 53.2501, 'W')
            IR_laser_no3_W.constant(8.204000, 53.2277, 'W')
            IR_laser_no3_W.constant(8.206000, 53.2066, 'W')
            IR_laser_no3_W.constant(8.208000, 53.187, 'W')
            IR_laser_no3_W.constant(8.210000, 53.1686, 'W')
            IR_laser_no3_W.constant(8.212000, 53.1514, 'W')
            IR_laser_no3_W.constant(8.214000, 53.1353, 'W')
            IR_laser_no3_W.constant(8.216000, 53.1203, 'W')
            IR_laser_no3_W.constant(8.218000, 53.1062, 'W')
            IR_laser_no3_W.constant(8.220000, 53.093, 'W')
            IR_laser_no3_W.constant(8.222000, 53.0807, 'W')
            IR_laser_no3_W.constant(8.224000, 53.0691, 'W')
            IR_laser_no3_W.constant(8.226000, 53.0584, 'W')
            IR_laser_no3_W.constant(8.228000, 53.0483, 'W')
            IR_laser_no3_W.constant(8.230000, 53.0388, 'W')
            IR_laser_no3_W.constant(8.232000, 53.03, 'W')
            IR_laser_no3_W.constant(8.234000, 53.0217, 'W')
            IR_laser_no3_W.constant(8.236000, 53.014, 'W')
            IR_laser_no3_W.constant(8.238000, 53.0068, 'W')
            IR_laser_no3_W.constant(8.240000, 53.0, 'W')
            IR_laser_no3_W.constant(8.241002, 53.0, 'W')
            IR_laser_no3_W.constant(8.243018, 52.5374, 'W')
            IR_laser_no3_W.constant(8.245034, 52.0822, 'W')
            IR_laser_no3_W.constant(8.247050, 51.6343, 'W')
            IR_laser_no3_W.constant(8.249066, 51.1936, 'W')
            IR_laser_no3_W.constant(8.251083, 50.7599, 'W')
            IR_laser_no3_W.constant(8.253099, 50.3331, 'W')
            IR_laser_no3_W.constant(8.255115, 49.9132, 'W')
            IR_laser_no3_W.constant(8.257131, 49.5, 'W')
            IR_laser_no3_W.constant(8.259147, 49.0934, 'W')
            IR_laser_no3_W.constant(8.261163, 48.6933, 'W')
            IR_laser_no3_W.constant(8.263179, 48.2996, 'W')
            IR_laser_no3_W.constant(8.265195, 47.9122, 'W')
            IR_laser_no3_W.constant(8.267211, 47.531, 'W')
            IR_laser_no3_W.constant(8.269228, 47.1559, 'W')
            IR_laser_no3_W.constant(8.271244, 46.7868, 'W')
            IR_laser_no3_W.constant(8.273260, 46.4236, 'W')
            IR_laser_no3_W.constant(8.275276, 46.0663, 'W')
            IR_laser_no3_W.constant(8.277292, 45.7146, 'W')
            IR_laser_no3_W.constant(8.279308, 45.3686, 'W')
            IR_laser_no3_W.constant(8.281324, 45.0281, 'W')
            IR_laser_no3_W.constant(8.283340, 44.693, 'W')
            IR_laser_no3_W.constant(8.285356, 44.3634, 'W')
            IR_laser_no3_W.constant(8.287373, 44.0389, 'W')
            IR_laser_no3_W.constant(8.289389, 43.7197, 'W')
            IR_laser_no3_W.constant(8.291405, 43.4056, 'W')
            IR_laser_no3_W.constant(8.293421, 43.0965, 'W')
            IR_laser_no3_W.constant(8.295437, 42.7924, 'W')
            IR_laser_no3_W.constant(8.297453, 42.4931, 'W')
            IR_laser_no3_W.constant(8.299469, 42.1986, 'W')
            IR_laser_no3_W.constant(8.301485, 41.9088, 'W')
            IR_laser_no3_W.constant(8.303502, 41.6237, 'W')
            IR_laser_no3_W.constant(8.305518, 41.3431, 'W')
            IR_laser_no3_W.constant(8.307534, 41.067, 'W')
            IR_laser_no3_W.constant(8.309550, 40.7953, 'W')
            IR_laser_no3_W.constant(8.311566, 40.528, 'W')
            IR_laser_no3_W.constant(8.313582, 40.265, 'W')
            IR_laser_no3_W.constant(8.315598, 40.0061, 'W')
            IR_laser_no3_W.constant(8.317614, 39.7514, 'W')
            IR_laser_no3_W.constant(8.319630, 39.5008, 'W')
            IR_laser_no3_W.constant(8.321647, 39.2542, 'W')
            IR_laser_no3_W.constant(8.323663, 39.0115, 'W')
            IR_laser_no3_W.constant(8.325679, 38.7727, 'W')
            IR_laser_no3_W.constant(8.327695, 38.5378, 'W')
            IR_laser_no3_W.constant(8.329711, 38.3066, 'W')
            IR_laser_no3_W.constant(8.331727, 38.0791, 'W')
            IR_laser_no3_W.constant(8.333743, 37.8552, 'W')
            IR_laser_no3_W.constant(8.335759, 37.6349, 'W')
            IR_laser_no3_W.constant(8.337775, 37.4182, 'W')
            IR_laser_no3_W.constant(8.339792, 37.2049, 'W')
            IR_laser_no3_W.constant(8.341808, 36.995, 'W')
            IR_laser_no3_W.constant(8.343824, 36.7885, 'W')
            IR_laser_no3_W.constant(8.345840, 36.5852, 'W')
            IR_laser_no3_W.constant(8.347856, 36.3853, 'W')
            IR_laser_no3_W.constant(8.349872, 36.1885, 'W')
            IR_laser_no3_W.constant(8.351888, 35.9949, 'W')
            IR_laser_no3_W.constant(8.353904, 35.8044, 'W')
            IR_laser_no3_W.constant(8.355920, 35.6169, 'W')
            IR_laser_no3_W.constant(8.357937, 35.4324, 'W')
            IR_laser_no3_W.constant(8.359953, 35.2509, 'W')
            IR_laser_no3_W.constant(8.361969, 35.0723, 'W')
            IR_laser_no3_W.constant(8.363985, 34.8965, 'W')
            IR_laser_no3_W.constant(8.366001, 34.7236, 'W')
            IR_laser_no3_W.constant(8.368017, 34.5534, 'W')
            IR_laser_no3_W.constant(8.370033, 34.3859, 'W')
            IR_laser_no3_W.constant(8.372049, 34.2212, 'W')
            IR_laser_no3_W.constant(8.374065, 34.059, 'W')
            IR_laser_no3_W.constant(8.376082, 33.8995, 'W')
            IR_laser_no3_W.constant(8.378098, 33.7425, 'W')
            IR_laser_no3_W.constant(8.380114, 33.588, 'W')
            IR_laser_no3_W.constant(8.382130, 33.436, 'W')
            IR_laser_no3_W.constant(8.384146, 33.2864, 'W')
            IR_laser_no3_W.constant(8.386162, 33.1392, 'W')
            IR_laser_no3_W.constant(8.388178, 32.9944, 'W')
            IR_laser_no3_W.constant(8.390194, 32.8519, 'W')
            IR_laser_no3_W.constant(8.392210, 32.7116, 'W')
            IR_laser_no3_W.constant(8.394227, 32.5736, 'W')
            IR_laser_no3_W.constant(8.396243, 32.4379, 'W')
            IR_laser_no3_W.constant(8.398259, 32.3043, 'W')
            MOT_current_0to100A_no8_A.constant(8.400020, 110.0, 'A')
            IR_laser_no3_W.constant(8.400275, 32.1728, 'W')
            IR_laser_no3_W.constant(8.402291, 32.0434, 'W')
            MOT_current_0to100A_no8_A.constant(8.403020, 111.6, 'A')
            IR_laser_no3_W.constant(8.404307, 31.9161, 'W')
            MOT_current_0to100A_no8_A.constant(8.406020, 113.2, 'A')
            IR_laser_no3_W.constant(8.406323, 31.7908, 'W')
            IR_laser_no3_W.constant(8.408339, 31.6676, 'W')
            MOT_current_0to100A_no8_A.constant(8.409020, 114.8, 'A')
            IR_laser_no3_W.constant(8.410355, 31.5463, 'W')
            MOT_current_0to100A_no8_A.constant(8.412020, 116.4, 'A')
            IR_laser_no3_W.constant(8.412372, 31.427, 'W')
            IR_laser_no3_W.constant(8.414388, 31.3095, 'W')
            MOT_current_0to100A_no8_A.constant(8.415020, 118.0, 'A')
            IR_laser_no3_W.constant(8.416404, 31.194, 'W')
            MOT_current_0to100A_no8_A.constant(8.418020, 119.6, 'A')
            IR_laser_no3_W.constant(8.418420, 31.0803, 'W')
            IR_laser_no3_W.constant(8.420436, 30.9684, 'W')
            MOT_current_0to100A_no8_A.constant(8.421020, 121.2, 'A')
            IR_laser_no3_W.constant(8.422452, 30.8583, 'W')
            MOT_current_0to100A_no8_A.constant(8.424020, 122.8, 'A')
            IR_laser_no3_W.constant(8.424468, 30.7499, 'W')
            IR_laser_no3_W.constant(8.426484, 30.6433, 'W')
            MOT_current_0to100A_no8_A.constant(8.427020, 124.4, 'A')
            IR_laser_no3_W.constant(8.428500, 30.5384, 'W')
            MOT_current_0to100A_no8_A.constant(8.430020, 126.0, 'A')
            IR_laser_no3_W.constant(8.430517, 30.4352, 'W')
            IR_laser_no3_W.constant(8.432533, 30.3336, 'W')
            MOT_current_0to100A_no8_A.constant(8.433020, 127.6, 'A')
            IR_laser_no3_W.constant(8.434549, 30.2337, 'W')
            MOT_current_0to100A_no8_A.constant(8.436020, 129.2, 'A')
            IR_laser_no3_W.constant(8.436565, 30.1354, 'W')
            IR_laser_no3_W.constant(8.438581, 30.0386, 'W')
            MOT_current_0to100A_no8_A.constant(8.439020, 130.8, 'A')
            IR_laser_no3_W.constant(8.440597, 29.9434, 'W')
            MOT_current_0to100A_no8_A.constant(8.442020, 132.4, 'A')
            IR_laser_no3_W.constant(8.442613, 29.8497, 'W')
            IR_laser_no3_W.constant(8.444629, 29.7575, 'W')
            MOT_current_0to100A_no8_A.constant(8.445020, 134.0, 'A')
            IR_laser_no3_W.constant(8.446646, 29.6667, 'W')
            MOT_current_0to100A_no8_A.constant(8.448020, 135.6, 'A')
            IR_laser_no3_W.constant(8.448662, 29.5775, 'W')
            IR_laser_no3_W.constant(8.450678, 29.4896, 'W')
            MOT_current_0to100A_no8_A.constant(8.451020, 137.2, 'A')
            IR_laser_no3_W.constant(8.452694, 29.4032, 'W')
            MOT_current_0to100A_no8_A.constant(8.454020, 138.8, 'A')
            IR_laser_no3_W.constant(8.454710, 29.3181, 'W')
            IR_laser_no3_W.constant(8.456726, 29.2344, 'W')
            MOT_current_0to100A_no8_A.constant(8.457020, 140.4, 'A')
            IR_laser_no3_W.constant(8.458742, 29.1521, 'W')
            MOT_current_0to100A_no8_A.constant(8.460020, 142.0, 'A')
            IR_laser_no3_W.constant(8.460758, 29.071, 'W')
            IR_laser_no3_W.constant(8.462774, 28.9913, 'W')
            MOT_current_0to100A_no8_A.constant(8.463020, 143.6, 'A')
            IR_laser_no3_W.constant(8.464791, 28.9128, 'W')
            MOT_current_0to100A_no8_A.constant(8.466020, 145.2, 'A')
            IR_laser_no3_W.constant(8.466807, 28.8356, 'W')
            IR_laser_no3_W.constant(8.468823, 28.7596, 'W')
            MOT_current_0to100A_no8_A.constant(8.469020, 146.8, 'A')
            IR_laser_no3_W.constant(8.470839, 28.6849, 'W')
            MOT_current_0to100A_no8_A.constant(8.472020, 148.4, 'A')
            IR_laser_no3_W.constant(8.472855, 28.6113, 'W')
            IR_laser_no3_W.constant(8.474871, 28.5389, 'W')
            MOT_current_0to100A_no8_A.constant(8.475020, 150.0, 'A')
            IR_laser_no3_W.constant(8.476887, 28.4677, 'W')
            MOT_current_0to100A_no8_A.constant(8.478019, 151.6, 'A')
            IR_laser_no3_W.constant(8.478903, 28.3976, 'W')
            IR_laser_no3_W.constant(8.480919, 28.3286, 'W')
            MOT_current_0to100A_no8_A.constant(8.481019, 153.2, 'A')
            IR_laser_no3_W.constant(8.482936, 28.2608, 'W')
            MOT_current_0to100A_no8_A.constant(8.484019, 154.8, 'A')
            IR_laser_no3_W.constant(8.484952, 28.194, 'W')
            IR_laser_no3_W.constant(8.486968, 28.1283, 'W')
            MOT_current_0to100A_no8_A.constant(8.487019, 156.4, 'A')
            IR_laser_no3_W.constant(8.488984, 28.0636, 'W')
            MOT_current_0to100A_no8_A.constant(8.490019, 158.0, 'A')
            IR_laser_no3_W.constant(8.491000, 28.0, 'W')
            IR_laser_no3_W.constant(8.492002, 28.0, 'W')
            Green_AOM_no6_W.constant(8.492008, 7.0, 'W')
            MOT_current_0to100A_no8_A.constant(8.493019, 159.6, 'A')
            IR_laser_no3_W.constant(8.494002, 27.7856, 'W')
            Green_AOM_no6_W.constant(8.494008, 6.9464, 'W')
            IR_laser_no3_W.constant(8.496002, 27.5739, 'W')
            Green_AOM_no6_W.constant(8.496008, 6.8935, 'W')
            MOT_current_0to100A_no8_A.constant(8.496019, 161.2, 'A')
            IR_laser_no3_W.constant(8.498002, 27.3651, 'W')
            Green_AOM_no6_W.constant(8.498008, 6.8413, 'W')
            MOT_current_0to100A_no8_A.constant(8.499019, 162.8, 'A')
            IR_laser_no3_W.constant(8.500002, 27.1591, 'W')
            Green_AOM_no6_W.constant(8.500008, 6.7898, 'W')
            IR_laser_no3_W.constant(8.502002, 26.9558, 'W')
            Green_AOM_no6_W.constant(8.502008, 6.7389, 'W')
            MOT_current_0to100A_no8_A.constant(8.502019, 164.4, 'A')
            IR_laser_no3_W.constant(8.504002, 26.7552, 'W')
            Green_AOM_no6_W.constant(8.504008, 6.6888, 'W')
            MOT_current_0to100A_no8_A.constant(8.505019, 166.0, 'A')
            IR_laser_no3_W.constant(8.506002, 26.5572, 'W')
            Green_AOM_no6_W.constant(8.506008, 6.6393, 'W')
            IR_laser_no3_W.constant(8.508002, 26.3619, 'W')
            Green_AOM_no6_W.constant(8.508008, 6.5905, 'W')
            MOT_current_0to100A_no8_A.constant(8.508019, 167.6, 'A')
            IR_laser_no3_W.constant(8.510002, 26.1691, 'W')
            Green_AOM_no6_W.constant(8.510008, 6.5423, 'W')
            MOT_current_0to100A_no8_A.constant(8.511019, 169.2, 'A')
            IR_laser_no3_W.constant(8.512002, 25.9789, 'W')
            Green_AOM_no6_W.constant(8.512008, 6.4947, 'W')
            IR_laser_no3_W.constant(8.514002, 25.7912, 'W')
            Green_AOM_no6_W.constant(8.514008, 6.4478, 'W')
            MOT_current_0to100A_no8_A.constant(8.514019, 170.8, 'A')
            IR_laser_no3_W.constant(8.516002, 25.606, 'W')
            Green_AOM_no6_W.constant(8.516008, 6.4015, 'W')
            MOT_current_0to100A_no8_A.constant(8.517019, 172.4, 'A')
            IR_laser_no3_W.constant(8.518002, 25.4233, 'W')
            Green_AOM_no6_W.constant(8.518008, 6.3558, 'W')
            IR_laser_no3_W.constant(8.520002, 25.243, 'W')
            Green_AOM_no6_W.constant(8.520008, 6.3107, 'W')
            MOT_current_0to100A_no8_A.constant(8.520019, 174.0, 'A')
            IR_laser_no3_W.constant(8.522002, 25.065, 'W')
            Green_AOM_no6_W.constant(8.522008, 6.2663, 'W')
            MOT_current_0to100A_no8_A.constant(8.523019, 175.6, 'A')
            IR_laser_no3_W.constant(8.524002, 24.8895, 'W')
            Green_AOM_no6_W.constant(8.524008, 6.2224, 'W')
            IR_laser_no3_W.constant(8.526002, 24.7162, 'W')
            Green_AOM_no6_W.constant(8.526008, 6.1791, 'W')
            MOT_current_0to100A_no8_A.constant(8.526019, 177.2, 'A')
            IR_laser_no3_W.constant(8.528002, 24.5453, 'W')
            Green_AOM_no6_W.constant(8.528008, 6.1363, 'W')
            MOT_current_0to100A_no8_A.constant(8.529019, 178.8, 'A')
            IR_laser_no3_W.constant(8.530002, 24.3766, 'W')
            Green_AOM_no6_W.constant(8.530008, 6.0941, 'W')
            IR_laser_no3_W.constant(8.532002, 24.2101, 'W')
            Green_AOM_no6_W.constant(8.532008, 6.0525, 'W')
            MOT_current_0to100A_no8_A.constant(8.532019, 180.4, 'A')
            IR_laser_no3_W.constant(8.534002, 24.0458, 'W')
            Green_AOM_no6_W.constant(8.534008, 6.0115, 'W')
            MOT_current_0to100A_no8_A.constant(8.535019, 182.0, 'A')
            IR_laser_no3_W.constant(8.536002, 23.8838, 'W')
            Green_AOM_no6_W.constant(8.536008, 5.9709, 'W')
            IR_laser_no3_W.constant(8.538002, 23.7238, 'W')
            Green_AOM_no6_W.constant(8.538008, 5.931, 'W')
            MOT_current_0to100A_no8_A.constant(8.538019, 183.6, 'A')
            IR_laser_no3_W.constant(8.540002, 23.566, 'W')
            Green_AOM_no6_W.constant(8.540008, 5.8915, 'W')
            MOT_current_0to100A_no8_A.constant(8.541019, 185.2, 'A')
            IR_laser_no3_W.constant(8.542002, 23.4103, 'W')
            Green_AOM_no6_W.constant(8.542008, 5.8526, 'W')
            IR_laser_no3_W.constant(8.544002, 23.2566, 'W')
            Green_AOM_no6_W.constant(8.544008, 5.8142, 'W')
            MOT_current_0to100A_no8_A.constant(8.544019, 186.8, 'A')
            IR_laser_no3_W.constant(8.546002, 23.105, 'W')
            Green_AOM_no6_W.constant(8.546008, 5.7763, 'W')
            MOT_current_0to100A_no8_A.constant(8.547019, 188.4, 'A')
            IR_laser_no3_W.constant(8.548002, 22.9554, 'W')
            Green_AOM_no6_W.constant(8.548008, 5.7388, 'W')
            IR_laser_no3_W.constant(8.550002, 22.8078, 'W')
            Green_AOM_no6_W.constant(8.550008, 5.7019, 'W')
            MOT_current_0to100A_no8_A.constant(8.550019, 190.0, 'A')
            IR_laser_no3_W.constant(8.552002, 22.6621, 'W')
            Green_AOM_no6_W.constant(8.552008, 5.6655, 'W')
            IR_laser_no3_W.constant(8.554002, 22.5183, 'W')
            Green_AOM_no6_W.constant(8.554008, 5.6296, 'W')
            IR_laser_no3_W.constant(8.556002, 22.3765, 'W')
            Green_AOM_no6_W.constant(8.556008, 5.5941, 'W')
            IR_laser_no3_W.constant(8.558002, 22.2365, 'W')
            Green_AOM_no6_W.constant(8.558008, 5.5591, 'W')
            IR_laser_no3_W.constant(8.560002, 22.0984, 'W')
            Green_AOM_no6_W.constant(8.560008, 5.5246, 'W')
            IR_laser_no3_W.constant(8.562002, 21.9621, 'W')
            Green_AOM_no6_W.constant(8.562008, 5.4905, 'W')
            IR_laser_no3_W.constant(8.564002, 21.8276, 'W')
            Green_AOM_no6_W.constant(8.564008, 5.4569, 'W')
            IR_laser_no3_W.constant(8.566002, 21.6949, 'W')
            Green_AOM_no6_W.constant(8.566008, 5.4237, 'W')
            IR_laser_no3_W.constant(8.568001, 21.564, 'W')
            Green_AOM_no6_W.constant(8.568008, 5.391, 'W')
            IR_laser_no3_W.constant(8.570001, 21.4348, 'W')
            Green_AOM_no6_W.constant(8.570008, 5.3587, 'W')
            IR_laser_no3_W.constant(8.572001, 21.3073, 'W')
            Green_AOM_no6_W.constant(8.572008, 5.3268, 'W')
            IR_laser_no3_W.constant(8.574001, 21.1815, 'W')
            Green_AOM_no6_W.constant(8.574008, 5.2954, 'W')
            IR_laser_no3_W.constant(8.576001, 21.0574, 'W')
            Green_AOM_no6_W.constant(8.576008, 5.2643, 'W')
            IR_laser_no3_W.constant(8.578001, 20.9349, 'W')
            Green_AOM_no6_W.constant(8.578008, 5.2337, 'W')
            IR_laser_no3_W.constant(8.580001, 20.814, 'W')
            Green_AOM_no6_W.constant(8.580008, 5.2035, 'W')
            IR_laser_no3_W.constant(8.582001, 20.6947, 'W')
            Green_AOM_no6_W.constant(8.582008, 5.1737, 'W')
            IR_laser_no3_W.constant(8.584001, 20.577, 'W')
            Green_AOM_no6_W.constant(8.584008, 5.1443, 'W')
            IR_laser_no3_W.constant(8.586001, 20.4609, 'W')
            Green_AOM_no6_W.constant(8.586008, 5.1152, 'W')
            IR_laser_no3_W.constant(8.588001, 20.3463, 'W')
            Green_AOM_no6_W.constant(8.588008, 5.0866, 'W')
            IR_laser_no3_W.constant(8.590001, 20.2332, 'W')
            Green_AOM_no6_W.constant(8.590008, 5.0583, 'W')
            IR_laser_no3_W.constant(8.592001, 20.1216, 'W')
            Green_AOM_no6_W.constant(8.592008, 5.0304, 'W')
            IR_laser_no3_W.constant(8.594001, 20.0115, 'W')
            Green_AOM_no6_W.constant(8.594008, 5.0029, 'W')
            IR_laser_no3_W.constant(8.596001, 19.9029, 'W')
            Green_AOM_no6_W.constant(8.596008, 4.9757, 'W')
            IR_laser_no3_W.constant(8.598001, 19.7957, 'W')
            Green_AOM_no6_W.constant(8.598008, 4.9489, 'W')
            IR_laser_no3_W.constant(8.600001, 19.6899, 'W')
            Green_AOM_no6_W.constant(8.600008, 4.9225, 'W')
            IR_laser_no3_W.constant(8.602001, 19.5855, 'W')
            Green_AOM_no6_W.constant(8.602008, 4.8964, 'W')
            IR_laser_no3_W.constant(8.604001, 19.4825, 'W')
            Green_AOM_no6_W.constant(8.604008, 4.8706, 'W')
            IR_laser_no3_W.constant(8.606001, 19.3809, 'W')
            Green_AOM_no6_W.constant(8.606008, 4.8452, 'W')
            IR_laser_no3_W.constant(8.608001, 19.2806, 'W')
            Green_AOM_no6_W.constant(8.608008, 4.8201, 'W')
            IR_laser_no3_W.constant(8.610001, 19.1816, 'W')
            Green_AOM_no6_W.constant(8.610008, 4.7954, 'W')
            IR_laser_no3_W.constant(8.612001, 19.084, 'W')
            Green_AOM_no6_W.constant(8.612008, 4.771, 'W')
            IR_laser_no3_W.constant(8.614001, 18.9876, 'W')
            Green_AOM_no6_W.constant(8.614008, 4.7469, 'W')
            IR_laser_no3_W.constant(8.616001, 18.8925, 'W')
            Green_AOM_no6_W.constant(8.616008, 4.7231, 'W')
            IR_laser_no3_W.constant(8.618001, 18.7987, 'W')
            Green_AOM_no6_W.constant(8.618008, 4.6997, 'W')
            IR_laser_no3_W.constant(8.620001, 18.7061, 'W')
            Green_AOM_no6_W.constant(8.620008, 4.6765, 'W')
            IR_laser_no3_W.constant(8.622001, 18.6148, 'W')
            Green_AOM_no6_W.constant(8.622008, 4.6537, 'W')
            IR_laser_no3_W.constant(8.624001, 18.5246, 'W')
            Green_AOM_no6_W.constant(8.624008, 4.6312, 'W')
            IR_laser_no3_W.constant(8.626001, 18.4357, 'W')
            Green_AOM_no6_W.constant(8.626008, 4.6089, 'W')
            IR_laser_no3_W.constant(8.628001, 18.3479, 'W')
            Green_AOM_no6_W.constant(8.628008, 4.587, 'W')
            IR_laser_no3_W.constant(8.630001, 18.2613, 'W')
            Green_AOM_no6_W.constant(8.630008, 4.5653, 'W')
            IR_laser_no3_W.constant(8.632001, 18.1758, 'W')
            Green_AOM_no6_W.constant(8.632008, 4.544, 'W')
            IR_laser_no3_W.constant(8.634001, 18.0915, 'W')
            Green_AOM_no6_W.constant(8.634008, 4.5229, 'W')
            IR_laser_no3_W.constant(8.636001, 18.0083, 'W')
            Green_AOM_no6_W.constant(8.636008, 4.5021, 'W')
            IR_laser_no3_W.constant(8.638001, 17.9262, 'W')
            Green_AOM_no6_W.constant(8.638008, 4.4815, 'W')
            IR_laser_no3_W.constant(8.640001, 17.8451, 'W')
            Green_AOM_no6_W.constant(8.640008, 4.4613, 'W')
            IR_laser_no3_W.constant(8.642001, 17.7652, 'W')
            Green_AOM_no6_W.constant(8.642008, 4.4413, 'W')
            IR_laser_no3_W.constant(8.644001, 17.6863, 'W')
            Green_AOM_no6_W.constant(8.644007, 4.4216, 'W')
            IR_laser_no3_W.constant(8.646001, 17.6085, 'W')
            Green_AOM_no6_W.constant(8.646007, 4.4021, 'W')
            IR_laser_no3_W.constant(8.648001, 17.5316, 'W')
            Green_AOM_no6_W.constant(8.648007, 4.3829, 'W')
            IR_laser_no3_W.constant(8.650001, 17.4558, 'W')
            Green_AOM_no6_W.constant(8.650007, 4.364, 'W')
            IR_laser_no3_W.constant(8.652001, 17.381, 'W')
            Green_AOM_no6_W.constant(8.652007, 4.3453, 'W')
            IR_laser_no3_W.constant(8.654001, 17.3072, 'W')
            Green_AOM_no6_W.constant(8.654007, 4.3268, 'W')
            IR_laser_no3_W.constant(8.656001, 17.2344, 'W')
            Green_AOM_no6_W.constant(8.656007, 4.3086, 'W')
            IR_laser_no3_W.constant(8.658001, 17.1626, 'W')
            Green_AOM_no6_W.constant(8.658007, 4.2906, 'W')
            IR_laser_no3_W.constant(8.660001, 17.0916, 'W')
            Green_AOM_no6_W.constant(8.660007, 4.2729, 'W')
            IR_laser_no3_W.constant(8.662001, 17.0217, 'W')
            Green_AOM_no6_W.constant(8.662007, 4.2554, 'W')
            IR_laser_no3_W.constant(8.664001, 16.9526, 'W')
            Green_AOM_no6_W.constant(8.664007, 4.2382, 'W')
            IR_laser_no3_W.constant(8.666001, 16.8845, 'W')
            Green_AOM_no6_W.constant(8.666007, 4.2211, 'W')
            IR_laser_no3_W.constant(8.668001, 16.8173, 'W')
            Green_AOM_no6_W.constant(8.668007, 4.2043, 'W')
            IR_laser_no3_W.constant(8.670001, 16.7509, 'W')
            Green_AOM_no6_W.constant(8.670007, 4.1877, 'W')
            IR_laser_no3_W.constant(8.672001, 16.6855, 'W')
            Green_AOM_no6_W.constant(8.672007, 4.1714, 'W')
            IR_laser_no3_W.constant(8.674001, 16.6209, 'W')
            Green_AOM_no6_W.constant(8.674007, 4.1552, 'W')
            IR_laser_no3_W.constant(8.676001, 16.5572, 'W')
            Green_AOM_no6_W.constant(8.676007, 4.1393, 'W')
            IR_laser_no3_W.constant(8.678001, 16.4943, 'W')
            Green_AOM_no6_W.constant(8.678007, 4.1236, 'W')
            IR_laser_no3_W.constant(8.680001, 16.4322, 'W')
            Green_AOM_no6_W.constant(8.680007, 4.108, 'W')
            IR_laser_no3_W.constant(8.682001, 16.371, 'W')
            Green_AOM_no6_W.constant(8.682007, 4.0927, 'W')
            IR_laser_no3_W.constant(8.684001, 16.3105, 'W')
            Green_AOM_no6_W.constant(8.684007, 4.0776, 'W')
            IR_laser_no3_W.constant(8.686001, 16.2509, 'W')
            Green_AOM_no6_W.constant(8.686007, 4.0627, 'W')
            IR_laser_no3_W.constant(8.688001, 16.1921, 'W')
            Green_AOM_no6_W.constant(8.688007, 4.048, 'W')
            IR_laser_no3_W.constant(8.690001, 16.134, 'W')
            Green_AOM_no6_W.constant(8.690007, 4.0335, 'W')
            IR_laser_no3_W.constant(8.692001, 16.0767, 'W')
            Green_AOM_no6_W.constant(8.692007, 4.0192, 'W')
            IR_laser_no3_W.constant(8.694001, 16.0202, 'W')
            Green_AOM_no6_W.constant(8.694007, 4.005, 'W')
            IR_laser_no3_W.constant(8.696001, 15.9644, 'W')
            Green_AOM_no6_W.constant(8.696007, 3.9911, 'W')
            IR_laser_no3_W.constant(8.698001, 15.9094, 'W')
            Green_AOM_no6_W.constant(8.698007, 3.9773, 'W')
            IR_laser_no3_W.constant(8.700001, 15.8551, 'W')
            Green_AOM_no6_W.constant(8.700007, 3.9638, 'W')
            IR_laser_no3_W.constant(8.702001, 15.8015, 'W')
            Green_AOM_no6_W.constant(8.702007, 3.9504, 'W')
            IR_laser_no3_W.constant(8.704001, 15.7486, 'W')
            Green_AOM_no6_W.constant(8.704007, 3.9371, 'W')
            IR_laser_no3_W.constant(8.706001, 15.6964, 'W')
            Green_AOM_no6_W.constant(8.706007, 3.9241, 'W')
            IR_laser_no3_W.constant(8.708001, 15.6449, 'W')
            Green_AOM_no6_W.constant(8.708007, 3.9112, 'W')
            IR_laser_no3_W.constant(8.710001, 15.5941, 'W')
            Green_AOM_no6_W.constant(8.710007, 3.8985, 'W')
            IR_laser_no3_W.constant(8.712001, 15.544, 'W')
            Green_AOM_no6_W.constant(8.712007, 3.886, 'W')
            IR_laser_no3_W.constant(8.714001, 15.4945, 'W')
            Green_AOM_no6_W.constant(8.714007, 3.8736, 'W')
            IR_laser_no3_W.constant(8.716001, 15.4457, 'W')
            Green_AOM_no6_W.constant(8.716007, 3.8614, 'W')
            IR_laser_no3_W.constant(8.718000, 15.3975, 'W')
            Green_AOM_no6_W.constant(8.718007, 3.8494, 'W')
            IR_laser_no3_W.constant(8.720000, 15.35, 'W')
            Green_AOM_no6_W.constant(8.720007, 3.8375, 'W')
            IR_laser_no3_W.constant(8.722000, 15.3031, 'W')
            Green_AOM_no6_W.constant(8.722007, 3.8258, 'W')
            IR_laser_no3_W.constant(8.724000, 15.2568, 'W')
            Green_AOM_no6_W.constant(8.724007, 3.8142, 'W')
            IR_laser_no3_W.constant(8.726000, 15.2111, 'W')
            Green_AOM_no6_W.constant(8.726007, 3.8028, 'W')
            IR_laser_no3_W.constant(8.728000, 15.1661, 'W')
            Green_AOM_no6_W.constant(8.728007, 3.7915, 'W')
            IR_laser_no3_W.constant(8.730000, 15.1216, 'W')
            Green_AOM_no6_W.constant(8.730007, 3.7804, 'W')
            IR_laser_no3_W.constant(8.732000, 15.0777, 'W')
            Green_AOM_no6_W.constant(8.732007, 3.7694, 'W')
            IR_laser_no3_W.constant(8.734000, 15.0344, 'W')
            Green_AOM_no6_W.constant(8.734007, 3.7586, 'W')
            IR_laser_no3_W.constant(8.736000, 14.9917, 'W')
            Green_AOM_no6_W.constant(8.736007, 3.7479, 'W')
            IR_laser_no3_W.constant(8.738000, 14.9495, 'W')
            Green_AOM_no6_W.constant(8.738007, 3.7374, 'W')
            IR_laser_no3_W.constant(8.740000, 14.9079, 'W')
            Green_AOM_no6_W.constant(8.740007, 3.727, 'W')
            IR_laser_no3_W.constant(8.742000, 14.8669, 'W')
            Green_AOM_no6_W.constant(8.742007, 3.7167, 'W')
            IR_laser_no3_W.constant(8.744000, 14.8264, 'W')
            Green_AOM_no6_W.constant(8.744007, 3.7066, 'W')
            IR_laser_no3_W.constant(8.746000, 14.7864, 'W')
            Green_AOM_no6_W.constant(8.746007, 3.6966, 'W')
            IR_laser_no3_W.constant(8.748000, 14.747, 'W')
            Green_AOM_no6_W.constant(8.748007, 3.6867, 'W')
            IR_laser_no3_W.constant(8.750000, 14.7081, 'W')
            Green_AOM_no6_W.constant(8.750007, 3.677, 'W')
            IR_laser_no3_W.constant(8.752000, 14.6697, 'W')
            Green_AOM_no6_W.constant(8.752007, 3.6674, 'W')
            IR_laser_no3_W.constant(8.754000, 14.6318, 'W')
            Green_AOM_no6_W.constant(8.754007, 3.6579, 'W')
            IR_laser_no3_W.constant(8.756000, 14.5944, 'W')
            Green_AOM_no6_W.constant(8.756007, 3.6486, 'W')
            IR_laser_no3_W.constant(8.758000, 14.5575, 'W')
            Green_AOM_no6_W.constant(8.758007, 3.6394, 'W')
            IR_laser_no3_W.constant(8.760000, 14.5211, 'W')
            Green_AOM_no6_W.constant(8.760007, 3.6303, 'W')
            IR_laser_no3_W.constant(8.762000, 14.4852, 'W')
            Green_AOM_no6_W.constant(8.762007, 3.6213, 'W')
            IR_laser_no3_W.constant(8.764000, 14.4497, 'W')
            Green_AOM_no6_W.constant(8.764007, 3.6124, 'W')
            IR_laser_no3_W.constant(8.766000, 14.4147, 'W')
            Green_AOM_no6_W.constant(8.766007, 3.6037, 'W')
            IR_laser_no3_W.constant(8.768000, 14.3802, 'W')
            Green_AOM_no6_W.constant(8.768007, 3.5951, 'W')
            IR_laser_no3_W.constant(8.770000, 14.3461, 'W')
            Green_AOM_no6_W.constant(8.770007, 3.5865, 'W')
            IR_laser_no3_W.constant(8.772000, 14.3125, 'W')
            Green_AOM_no6_W.constant(8.772007, 3.5781, 'W')
            IR_laser_no3_W.constant(8.774000, 14.2794, 'W')
            Green_AOM_no6_W.constant(8.774007, 3.5698, 'W')
            IR_laser_no3_W.constant(8.776000, 14.2467, 'W')
            Green_AOM_no6_W.constant(8.776007, 3.5617, 'W')
            IR_laser_no3_W.constant(8.778000, 14.2144, 'W')
            Green_AOM_no6_W.constant(8.778007, 3.5536, 'W')
            IR_laser_no3_W.constant(8.780000, 14.1825, 'W')
            Green_AOM_no6_W.constant(8.780007, 3.5456, 'W')
            IR_laser_no3_W.constant(8.782000, 14.1511, 'W')
            Green_AOM_no6_W.constant(8.782007, 3.5378, 'W')
            IR_laser_no3_W.constant(8.784000, 14.12, 'W')
            Green_AOM_no6_W.constant(8.784007, 3.53, 'W')
            IR_laser_no3_W.constant(8.786000, 14.0894, 'W')
            Green_AOM_no6_W.constant(8.786007, 3.5224, 'W')
            IR_laser_no3_W.constant(8.788000, 14.0592, 'W')
            Green_AOM_no6_W.constant(8.788007, 3.5148, 'W')
            IR_laser_no3_W.constant(8.790000, 14.0294, 'W')
            Green_AOM_no6_W.constant(8.790007, 3.5074, 'W')
            IR_laser_no3_W.constant(8.792000, 14.0, 'W')
            Green_AOM_no6_W.constant(8.792007, 3.5, 'W')
            IR_AOM_no2_percent.constant(8.793003, 100.0, 'percent')
            Green_AOM_no6_W.constant(8.793010, 3.5, 'W')
            IR_AOM_no2_percent.constant(8.809003, 98.9323, 'percent')
            Green_AOM_no6_W.constant(8.809010, 3.4631, 'W')
            IR_AOM_no2_percent.constant(8.825003, 97.8752, 'percent')
            Green_AOM_no6_W.constant(8.825010, 3.4267, 'W')
            IR_AOM_no2_percent.constant(8.841003, 96.8286, 'percent')
            Green_AOM_no6_W.constant(8.841010, 3.3905, 'W')
            IR_AOM_no2_percent.constant(8.857003, 95.7924, 'percent')
            Green_AOM_no6_W.constant(8.857010, 3.3548, 'W')
            IR_AOM_no2_percent.constant(8.873003, 94.7665, 'percent')
            Green_AOM_no6_W.constant(8.873010, 3.3194, 'W')
            IR_AOM_no2_percent.constant(8.889003, 93.7508, 'percent')
            Green_AOM_no6_W.constant(8.889010, 3.2843, 'W')
            IR_AOM_no2_percent.constant(8.905003, 92.7453, 'percent')
            Green_AOM_no6_W.constant(8.905010, 3.2496, 'W')
            IR_AOM_no2_percent.constant(8.921003, 91.7497, 'percent')
            Green_AOM_no6_W.constant(8.921010, 3.2152, 'W')
            IR_AOM_no2_percent.constant(8.937003, 90.7641, 'percent')
            Green_AOM_no6_W.constant(8.937010, 3.1812, 'W')
            IR_AOM_no2_percent.constant(8.953003, 89.7883, 'percent')
            Green_AOM_no6_W.constant(8.953010, 3.1475, 'W')
            IR_AOM_no2_percent.constant(8.969003, 88.8221, 'percent')
            Green_AOM_no6_W.constant(8.969010, 3.1142, 'W')
            IR_AOM_no2_percent.constant(8.985003, 87.8656, 'percent')
            Green_AOM_no6_W.constant(8.985010, 3.0811, 'W')
            IR_AOM_no2_percent.constant(9.001003, 86.9186, 'percent')
            Green_AOM_no6_W.constant(9.001010, 3.0485, 'W')
            IR_AOM_no2_percent.constant(9.017003, 85.981, 'percent')
            Green_AOM_no6_W.constant(9.017010, 3.0161, 'W')
            IR_AOM_no2_percent.constant(9.033003, 85.0528, 'percent')
            Green_AOM_no6_W.constant(9.033010, 2.9841, 'W')
            IR_AOM_no2_percent.constant(9.049003, 84.1338, 'percent')
            Green_AOM_no6_W.constant(9.049010, 2.9523, 'W')
            IR_AOM_no2_percent.constant(9.065003, 83.2239, 'percent')
            Green_AOM_no6_W.constant(9.065010, 2.9209, 'W')
            IR_AOM_no2_percent.constant(9.081003, 82.3231, 'percent')
            Green_AOM_no6_W.constant(9.081010, 2.8898, 'W')
            IR_AOM_no2_percent.constant(9.097003, 81.4313, 'percent')
            Green_AOM_no6_W.constant(9.097010, 2.859, 'W')
            IR_AOM_no2_percent.constant(9.113003, 80.5483, 'percent')
            Green_AOM_no6_W.constant(9.113010, 2.8286, 'W')
            IR_AOM_no2_percent.constant(9.129003, 79.6741, 'percent')
            Green_AOM_no6_W.constant(9.129010, 2.7984, 'W')
            IR_AOM_no2_percent.constant(9.145003, 78.8086, 'percent')
            Green_AOM_no6_W.constant(9.145010, 2.7685, 'W')
            IR_AOM_no2_percent.constant(9.161003, 77.9517, 'percent')
            Green_AOM_no6_W.constant(9.161010, 2.7389, 'W')
            IR_AOM_no2_percent.constant(9.177003, 77.1034, 'percent')
            Green_AOM_no6_W.constant(9.177010, 2.7097, 'W')
            IR_AOM_no2_percent.constant(9.193003, 76.2635, 'percent')
            Green_AOM_no6_W.constant(9.193010, 2.6807, 'W')
            IR_AOM_no2_percent.constant(9.209003, 75.4319, 'percent')
            Green_AOM_no6_W.constant(9.209010, 2.652, 'W')
            IR_AOM_no2_percent.constant(9.225003, 74.6086, 'percent')
            Green_AOM_no6_W.constant(9.225010, 2.6235, 'W')
            IR_AOM_no2_percent.constant(9.241003, 73.7935, 'percent')
            Green_AOM_no6_W.constant(9.241010, 2.5954, 'W')
            IR_AOM_no2_percent.constant(9.257003, 72.9866, 'percent')
            Green_AOM_no6_W.constant(9.257010, 2.5676, 'W')
            IR_AOM_no2_percent.constant(9.273003, 72.1876, 'percent')
            Green_AOM_no6_W.constant(9.273010, 2.54, 'W')
            IR_AOM_no2_percent.constant(9.289003, 71.3966, 'percent')
            Green_AOM_no6_W.constant(9.289010, 2.5127, 'W')
            IR_AOM_no2_percent.constant(9.305003, 70.6135, 'percent')
            Green_AOM_no6_W.constant(9.305010, 2.4856, 'W')
            IR_AOM_no2_percent.constant(9.321003, 69.8382, 'percent')
            Green_AOM_no6_W.constant(9.321010, 2.4589, 'W')
            IR_AOM_no2_percent.constant(9.337003, 69.0705, 'percent')
            Green_AOM_no6_W.constant(9.337010, 2.4324, 'W')
            IR_AOM_no2_percent.constant(9.353003, 68.3106, 'percent')
            Green_AOM_no6_W.constant(9.353010, 2.4062, 'W')
            IR_AOM_no2_percent.constant(9.369003, 67.5581, 'percent')
            Green_AOM_no6_W.constant(9.369010, 2.3802, 'W')
            IR_AOM_no2_percent.constant(9.385003, 66.8132, 'percent')
            Green_AOM_no6_W.constant(9.385010, 2.3545, 'W')
            IR_AOM_no2_percent.constant(9.401003, 66.0757, 'percent')
            Green_AOM_no6_W.constant(9.401010, 2.329, 'W')
            IR_AOM_no2_percent.constant(9.417003, 65.3455, 'percent')
            Green_AOM_no6_W.constant(9.417010, 2.3038, 'W')
            IR_AOM_no2_percent.constant(9.433003, 64.6226, 'percent')
            Green_AOM_no6_W.constant(9.433010, 2.2789, 'W')
            IR_AOM_no2_percent.constant(9.449003, 63.9068, 'percent')
            Green_AOM_no6_W.constant(9.449010, 2.2541, 'W')
            IR_AOM_no2_percent.constant(9.465003, 63.1982, 'percent')
            Green_AOM_no6_W.constant(9.465010, 2.2297, 'W')
            IR_AOM_no2_percent.constant(9.481003, 62.4967, 'percent')
            Green_AOM_no6_W.constant(9.481010, 2.2055, 'W')
            IR_AOM_no2_percent.constant(9.497003, 61.8021, 'percent')
            Green_AOM_no6_W.constant(9.497010, 2.1815, 'W')
            IR_AOM_no2_percent.constant(9.513003, 61.1145, 'percent')
            Green_AOM_no6_W.constant(9.513010, 2.1578, 'W')
            IR_AOM_no2_percent.constant(9.529003, 60.4336, 'percent')
            Green_AOM_no6_W.constant(9.529010, 2.1343, 'W')
            IR_AOM_no2_percent.constant(9.545003, 59.7596, 'percent')
            Green_AOM_no6_W.constant(9.545010, 2.111, 'W')
            IR_AOM_no2_percent.constant(9.561003, 59.0923, 'percent')
            Green_AOM_no6_W.constant(9.561010, 2.088, 'W')
            IR_AOM_no2_percent.constant(9.577003, 58.4316, 'percent')
            Green_AOM_no6_W.constant(9.577010, 2.0652, 'W')
            IR_AOM_no2_percent.constant(9.593003, 57.7774, 'percent')
            Green_AOM_no6_W.constant(9.593010, 2.0426, 'W')
            IR_AOM_no2_percent.constant(9.609003, 57.1298, 'percent')
            Green_AOM_no6_W.constant(9.609010, 2.0202, 'W')
            IR_AOM_no2_percent.constant(9.625003, 56.4887, 'percent')
            Green_AOM_no6_W.constant(9.625010, 1.9981, 'W')
            IR_AOM_no2_percent.constant(9.641003, 55.8539, 'percent')
            Green_AOM_no6_W.constant(9.641010, 1.9762, 'W')
            IR_AOM_no2_percent.constant(9.657003, 55.2254, 'percent')
            Green_AOM_no6_W.constant(9.657010, 1.9545, 'W')
            IR_AOM_no2_percent.constant(9.673003, 54.6032, 'percent')
            Green_AOM_no6_W.constant(9.673010, 1.933, 'W')
            IR_AOM_no2_percent.constant(9.689003, 53.9871, 'percent')
            Green_AOM_no6_W.constant(9.689010, 1.9117, 'W')
            IR_AOM_no2_percent.constant(9.705003, 53.3772, 'percent')
            Green_AOM_no6_W.constant(9.705010, 1.8907, 'W')
            IR_AOM_no2_percent.constant(9.721003, 52.7734, 'percent')
            Green_AOM_no6_W.constant(9.721010, 1.8698, 'W')
            IR_AOM_no2_percent.constant(9.737003, 52.1756, 'percent')
            Green_AOM_no6_W.constant(9.737010, 1.8492, 'W')
            IR_AOM_no2_percent.constant(9.753003, 51.5837, 'percent')
            Green_AOM_no6_W.constant(9.753010, 1.8288, 'W')
            IR_AOM_no2_percent.constant(9.769003, 50.9977, 'percent')
            Green_AOM_no6_W.constant(9.769010, 1.8086, 'W')
            IR_AOM_no2_percent.constant(9.785003, 50.4176, 'percent')
            Green_AOM_no6_W.constant(9.785010, 1.7885, 'W')
            IR_AOM_no2_percent.constant(9.801003, 49.8432, 'percent')
            Green_AOM_no6_W.constant(9.801010, 1.7687, 'W')
            MOT_current_0to100A_no8_A.constant(9.810001, 191.46, 'A')
            IR_AOM_no2_percent.constant(9.817003, 49.2745, 'percent')
            Green_AOM_no6_W.constant(9.817010, 1.7491, 'W')
            IR_AOM_no2_percent.constant(9.833003, 48.7115, 'percent')
            Green_AOM_no6_W.constant(9.833010, 1.7296, 'W')
            IR_AOM_no2_percent.constant(9.849003, 48.1541, 'percent')
            Green_AOM_no6_W.constant(9.849010, 1.7104, 'W')
            IR_AOM_no2_percent.constant(9.865003, 47.6022, 'percent')
            Green_AOM_no6_W.constant(9.865010, 1.6913, 'W')
            IR_AOM_no2_percent.constant(9.881003, 47.0559, 'percent')
            Green_AOM_no6_W.constant(9.881010, 1.6725, 'W')
            IR_AOM_no2_percent.constant(9.897003, 46.5149, 'percent')
            Green_AOM_no6_W.constant(9.897010, 1.6538, 'W')
            IR_AOM_no2_percent.constant(9.913003, 45.9794, 'percent')
            Green_AOM_no6_W.constant(9.913010, 1.6353, 'W')
            IR_AOM_no2_percent.constant(9.929003, 45.4492, 'percent')
            Green_AOM_no6_W.constant(9.929010, 1.617, 'W')
            IR_AOM_no2_percent.constant(9.945003, 44.9242, 'percent')
            Green_AOM_no6_W.constant(9.945010, 1.5989, 'W')
            IR_AOM_no2_percent.constant(9.961003, 44.4045, 'percent')
            Green_AOM_no6_W.constant(9.961010, 1.581, 'W')
            IR_AOM_no2_percent.constant(9.977003, 43.8899, 'percent')
            Green_AOM_no6_W.constant(9.977010, 1.5632, 'W')
            IR_AOM_no2_percent.constant(9.993003, 43.3805, 'percent')
            Green_AOM_no6_W.constant(9.993010, 1.5456, 'W')
            IR_AOM_no2_percent.constant(10.009003, 42.8761, 'percent')
            Green_AOM_no6_W.constant(10.009010, 1.5282, 'W')
            IR_AOM_no2_percent.constant(10.025003, 42.3768, 'percent')
            Green_AOM_no6_W.constant(10.025010, 1.511, 'W')
            IR_AOM_no2_percent.constant(10.041003, 41.8824, 'percent')
            Green_AOM_no6_W.constant(10.041010, 1.4939, 'W')
            IR_AOM_no2_percent.constant(10.057003, 41.393, 'percent')
            Green_AOM_no6_W.constant(10.057010, 1.477, 'W')
            IR_AOM_no2_percent.constant(10.073003, 40.9084, 'percent')
            Green_AOM_no6_W.constant(10.073010, 1.4603, 'W')
            IR_AOM_no2_percent.constant(10.089003, 40.4286, 'percent')
            Green_AOM_no6_W.constant(10.089010, 1.4437, 'W')
            IR_AOM_no2_percent.constant(10.105003, 39.9536, 'percent')
            Green_AOM_no6_W.constant(10.105010, 1.4273, 'W')
            IR_AOM_no2_percent.constant(10.121003, 39.4834, 'percent')
            Green_AOM_no6_W.constant(10.121010, 1.4111, 'W')
            IR_AOM_no2_percent.constant(10.137003, 39.0178, 'percent')
            Green_AOM_no6_W.constant(10.137010, 1.395, 'W')
            IR_AOM_no2_percent.constant(10.153003, 38.5568, 'percent')
            Green_AOM_no6_W.constant(10.153010, 1.3791, 'W')
            IR_AOM_no2_percent.constant(10.169003, 38.1004, 'percent')
            Green_AOM_no6_W.constant(10.169010, 1.3634, 'W')
            IR_AOM_no2_percent.constant(10.185003, 37.6486, 'percent')
            Green_AOM_no6_W.constant(10.185010, 1.3478, 'W')
            IR_AOM_no2_percent.constant(10.201003, 37.2013, 'percent')
            Green_AOM_no6_W.constant(10.201010, 1.3323, 'W')
            IR_AOM_no2_percent.constant(10.217003, 36.7584, 'percent')
            Green_AOM_no6_W.constant(10.217010, 1.317, 'W')
            IR_AOM_no2_percent.constant(10.233003, 36.3199, 'percent')
            Green_AOM_no6_W.constant(10.233010, 1.3019, 'W')
            IR_AOM_no2_percent.constant(10.249003, 35.8858, 'percent')
            Green_AOM_no6_W.constant(10.249010, 1.2869, 'W')
            IR_AOM_no2_percent.constant(10.265003, 35.456, 'percent')
            Green_AOM_no6_W.constant(10.265010, 1.2721, 'W')
            IR_AOM_no2_percent.constant(10.281003, 35.0305, 'percent')
            Green_AOM_no6_W.constant(10.281010, 1.2574, 'W')
            IR_AOM_no2_percent.constant(10.297003, 34.6092, 'percent')
            Green_AOM_no6_W.constant(10.297010, 1.2429, 'W')
            IR_AOM_no2_percent.constant(10.313003, 34.1922, 'percent')
            Green_AOM_no6_W.constant(10.313010, 1.2285, 'W')
            IR_AOM_no2_percent.constant(10.329003, 33.7792, 'percent')
            Green_AOM_no6_W.constant(10.329010, 1.2142, 'W')
            IR_AOM_no2_percent.constant(10.345003, 33.3704, 'percent')
            Green_AOM_no6_W.constant(10.345010, 1.2001, 'W')
            IR_AOM_no2_percent.constant(10.361003, 32.9656, 'percent')
            Green_AOM_no6_W.constant(10.361010, 1.1861, 'W')
            IR_AOM_no2_percent.constant(10.377003, 32.5649, 'percent')
            Green_AOM_no6_W.constant(10.377010, 1.1723, 'W')
            IR_AOM_no2_percent.constant(10.393003, 32.1682, 'percent')
            Green_AOM_no6_W.constant(10.393010, 1.1586, 'W')
            IR_AOM_no2_percent.constant(10.409003, 31.7754, 'percent')
            Green_AOM_no6_W.constant(10.409010, 1.145, 'W')
            IR_AOM_no2_percent.constant(10.425003, 31.3865, 'percent')
            Green_AOM_no6_W.constant(10.425010, 1.1316, 'W')
            IR_AOM_no2_percent.constant(10.441003, 31.0014, 'percent')
            Green_AOM_no6_W.constant(10.441010, 1.1183, 'W')
            IR_AOM_no2_percent.constant(10.457003, 30.6203, 'percent')
            Green_AOM_no6_W.constant(10.457010, 1.1052, 'W')
            IR_AOM_no2_percent.constant(10.473003, 30.2429, 'percent')
            Green_AOM_no6_W.constant(10.473010, 1.0921, 'W')
            IR_AOM_no2_percent.constant(10.489003, 29.8692, 'percent')
            Green_AOM_no6_W.constant(10.489010, 1.0792, 'W')
            IR_AOM_no2_percent.constant(10.505003, 29.4993, 'percent')
            Green_AOM_no6_W.constant(10.505010, 1.0665, 'W')
            IR_AOM_no2_percent.constant(10.521003, 29.1331, 'percent')
            Green_AOM_no6_W.constant(10.521010, 1.0538, 'W')
            IR_AOM_no2_percent.constant(10.537003, 28.7705, 'percent')
            Green_AOM_no6_W.constant(10.537010, 1.0413, 'W')
            IR_AOM_no2_percent.constant(10.553003, 28.4115, 'percent')
            Green_AOM_no6_W.constant(10.553010, 1.0289, 'W')
            IR_AOM_no2_percent.constant(10.569003, 28.056, 'percent')
            Green_AOM_no6_W.constant(10.569010, 1.0167, 'W')
            IR_AOM_no2_percent.constant(10.585003, 27.7042, 'percent')
            Green_AOM_no6_W.constant(10.585010, 1.0045, 'W')
            IR_AOM_no2_percent.constant(10.601003, 27.3558, 'percent')
            Green_AOM_no6_W.constant(10.601010, 0.9925, 'W')
            IR_AOM_no2_percent.constant(10.617003, 27.0109, 'percent')
            Green_AOM_no6_W.constant(10.617010, 0.9806, 'W')
            IR_AOM_no2_percent.constant(10.633003, 26.6694, 'percent')
            Green_AOM_no6_W.constant(10.633010, 0.9688, 'W')
            IR_AOM_no2_percent.constant(10.649003, 26.3313, 'percent')
            Green_AOM_no6_W.constant(10.649010, 0.9571, 'W')
            IR_AOM_no2_percent.constant(10.665003, 25.9966, 'percent')
            Green_AOM_no6_W.constant(10.665010, 0.9456, 'W')
            IR_AOM_no2_percent.constant(10.681003, 25.6652, 'percent')
            Green_AOM_no6_W.constant(10.681010, 0.9341, 'W')
            IR_AOM_no2_percent.constant(10.697003, 25.3371, 'percent')
            Green_AOM_no6_W.constant(10.697010, 0.9228, 'W')
            IR_AOM_no2_percent.constant(10.713003, 25.0123, 'percent')
            Green_AOM_no6_W.constant(10.713010, 0.9116, 'W')
            IR_AOM_no2_percent.constant(10.729003, 24.6907, 'percent')
            Green_AOM_no6_W.constant(10.729010, 0.9005, 'W')
            IR_AOM_no2_percent.constant(10.745003, 24.3723, 'percent')
            Green_AOM_no6_W.constant(10.745010, 0.8895, 'W')
            FB_Helmholtz_no0per2_on.go_high(10.757900)
            FBtoMOT_AntitoParallel_no3per2.go_high(10.758899)
            IR_AOM_no2_percent.constant(10.761003, 24.057, 'percent')
            Green_AOM_no6_W.constant(10.761010, 0.8786, 'W')
            IR_AOM_no2_percent.constant(10.777003, 23.745, 'percent')
            Green_AOM_no6_W.constant(10.777010, 0.8678, 'W')
            FB_IGBT_no0per16_on.go_high(10.789898)
            FB_current_0to200A_no14_A.constant(10.789901, 0.0, 'A')
            IR_AOM_no2_percent.constant(10.793002, 23.436, 'percent')
            Green_AOM_no6_W.constant(10.793009, 0.8572, 'W')
            FB_current_0to200A_no14_A.constant(10.797901, 0.0062, 'A')
            FB_current_0to200A_no14_A.constant(10.805901, 0.0124, 'A')
            IR_AOM_no2_percent.constant(10.809002, 23.1301, 'percent')
            Green_AOM_no6_W.constant(10.809009, 0.8466, 'W')
            FB_current_0to200A_no14_A.constant(10.813901, 0.0186, 'A')
            FB_current_0to200A_no14_A.constant(10.821901, 0.0248, 'A')
            IR_AOM_no2_percent.constant(10.825002, 22.8272, 'percent')
            Green_AOM_no6_W.constant(10.825009, 0.8362, 'W')
            FB_current_0to200A_no14_A.constant(10.829901, 0.031, 'A')
            FB_current_0to200A_no14_A.constant(10.837901, 0.0372, 'A')
            IR_AOM_no2_percent.constant(10.841002, 22.5273, 'percent')
            Green_AOM_no6_W.constant(10.841009, 0.8258, 'W')
            FB_current_0to200A_no14_A.constant(10.845901, 0.0434, 'A')
            FB_current_0to200A_no14_A.constant(10.853901, 0.0496, 'A')
            IR_AOM_no2_percent.constant(10.857002, 22.2305, 'percent')
            Green_AOM_no6_W.constant(10.857009, 0.8156, 'W')
            FB_current_0to200A_no14_A.constant(10.861901, 0.0558, 'A')
            FB_current_0to200A_no14_A.constant(10.869901, 0.062, 'A')
            IR_AOM_no2_percent.constant(10.873002, 21.9365, 'percent')
            Green_AOM_no6_W.constant(10.873009, 0.8054, 'W')
            FB_current_0to200A_no14_A.constant(10.877901, 0.0682, 'A')
            FB_current_0to200A_no14_A.constant(10.885901, 0.0744, 'A')
            IR_AOM_no2_percent.constant(10.889002, 21.6456, 'percent')
            Green_AOM_no6_W.constant(10.889009, 0.7954, 'W')
            FB_current_0to200A_no14_A.constant(10.893901, 0.0806, 'A')
            FB_current_0to200A_no14_A.constant(10.901901, 0.0868, 'A')
            IR_AOM_no2_percent.constant(10.905002, 21.3575, 'percent')
            Green_AOM_no6_W.constant(10.905009, 0.7854, 'W')
            FB_current_0to200A_no14_A.constant(10.909901, 0.093, 'A')
            FB_current_0to200A_no14_A.constant(10.917901, 0.0992, 'A')
            IR_AOM_no2_percent.constant(10.921002, 21.0722, 'percent')
            Green_AOM_no6_W.constant(10.921009, 0.7756, 'W')
            FB_current_0to200A_no14_A.constant(10.925901, 0.1054, 'A')
            FB_current_0to200A_no14_A.constant(10.933901, 0.1116, 'A')
            IR_AOM_no2_percent.constant(10.937002, 20.7898, 'percent')
            Green_AOM_no6_W.constant(10.937009, 0.7658, 'W')
            FB_current_0to200A_no14_A.constant(10.941901, 0.1178, 'A')
            FB_current_0to200A_no14_A.constant(10.949901, 0.124, 'A')
            IR_AOM_no2_percent.constant(10.953002, 20.5103, 'percent')
            Green_AOM_no6_W.constant(10.953009, 0.7562, 'W')
            FB_current_0to200A_no14_A.constant(10.957901, 0.1302, 'A')
            FB_current_0to200A_no14_A.constant(10.965901, 0.1364, 'A')
            IR_AOM_no2_percent.constant(10.969002, 20.2335, 'percent')
            Green_AOM_no6_W.constant(10.969009, 0.7466, 'W')
            FB_current_0to200A_no14_A.constant(10.973901, 0.1426, 'A')
            FB_current_0to200A_no14_A.constant(10.981901, 0.1488, 'A')
            IR_AOM_no2_percent.constant(10.985002, 19.9594, 'percent')
            Green_AOM_no6_W.constant(10.985009, 0.7372, 'W')
            FB_current_0to200A_no14_A.constant(10.989901, 0.155, 'A')
            FB_current_0to200A_no14_A.constant(10.997901, 0.1612, 'A')
            MOT_current_0to100A_no8_A.constant(10.999008, 192.0, 'A')
            IR_AOM_no2_percent.constant(11.001002, 19.6881, 'percent')
            Green_AOM_no6_W.constant(11.001009, 0.7278, 'W')
            MOT_current_0to100A_no8_A.constant(11.005675, 191.9949, 'A')
            FB_current_0to200A_no14_A.constant(11.005901, 0.1674, 'A')
            MOT_current_0to100A_no8_A.constant(11.012341, 191.9898, 'A')
            FB_current_0to200A_no14_A.constant(11.013901, 0.1736, 'A')
            IR_AOM_no2_percent.constant(11.017002, 19.4195, 'percent')
            Green_AOM_no6_W.constant(11.017009, 0.7185, 'W')
            MOT_current_0to100A_no8_A.constant(11.019008, 191.9846, 'A')
            FB_current_0to200A_no14_A.constant(11.021901, 0.1798, 'A')
            MOT_current_0to100A_no8_A.constant(11.025675, 191.9795, 'A')
            FB_current_0to200A_no14_A.constant(11.029901, 0.186, 'A')
            MOT_current_0to100A_no8_A.constant(11.032341, 191.9744, 'A')
            IR_AOM_no2_percent.constant(11.033002, 19.1535, 'percent')
            Green_AOM_no6_W.constant(11.033009, 0.7094, 'W')
            FB_current_0to200A_no14_A.constant(11.037901, 0.1922, 'A')
            MOT_current_0to100A_no8_A.constant(11.039008, 191.9693, 'A')
            MOT_current_0to100A_no8_A.constant(11.045675, 191.9642, 'A')
            FB_current_0to200A_no14_A.constant(11.045901, 0.1984, 'A')
            IR_AOM_no2_percent.constant(11.049002, 18.8902, 'percent')
            Green_AOM_no6_W.constant(11.049009, 0.7003, 'W')
            MOT_current_0to100A_no8_A.constant(11.052341, 191.959, 'A')
            FB_current_0to200A_no14_A.constant(11.053901, 0.2046, 'A')
            MOT_current_0to100A_no8_A.constant(11.059008, 191.9539, 'A')
            FB_current_0to200A_no14_A.constant(11.061901, 0.2108, 'A')
            IR_AOM_no2_percent.constant(11.065002, 18.6295, 'percent')
            Green_AOM_no6_W.constant(11.065009, 0.6913, 'W')
            MOT_current_0to100A_no8_A.constant(11.065675, 191.9488, 'A')
            FB_current_0to200A_no14_A.constant(11.069901, 0.217, 'A')
            MOT_current_0to100A_no8_A.constant(11.072341, 191.9437, 'A')
            FB_current_0to200A_no14_A.constant(11.077901, 0.2232, 'A')
            MOT_current_0to100A_no8_A.constant(11.079008, 191.9386, 'A')
            IR_AOM_no2_percent.constant(11.081002, 18.3715, 'percent')
            Green_AOM_no6_W.constant(11.081009, 0.6824, 'W')
            MOT_current_0to100A_no8_A.constant(11.085675, 191.9334, 'A')
            FB_current_0to200A_no14_A.constant(11.085901, 0.2294, 'A')
            MOT_current_0to100A_no8_A.constant(11.092341, 191.9283, 'A')
            FB_current_0to200A_no14_A.constant(11.093901, 0.2356, 'A')
            IR_AOM_no2_percent.constant(11.097002, 18.1159, 'percent')
            Green_AOM_no6_W.constant(11.097009, 0.6735, 'W')
            MOT_current_0to100A_no8_A.constant(11.099008, 191.9232, 'A')
            FB_current_0to200A_no14_A.constant(11.101901, 0.2418, 'A')
            MOT_current_0to100A_no8_A.constant(11.105675, 191.9181, 'A')
            FB_current_0to200A_no14_A.constant(11.109901, 0.248, 'A')
            MOT_current_0to100A_no8_A.constant(11.112341, 191.913, 'A')
            IR_AOM_no2_percent.constant(11.113002, 17.863, 'percent')
            Green_AOM_no6_W.constant(11.113009, 0.6648, 'W')
            FB_current_0to200A_no14_A.constant(11.117901, 0.2542, 'A')
            MOT_current_0to100A_no8_A.constant(11.119008, 191.9078, 'A')
            MOT_current_0to100A_no8_A.constant(11.125675, 191.9027, 'A')
            FB_current_0to200A_no14_A.constant(11.125901, 0.2604, 'A')
            IR_AOM_no2_percent.constant(11.129002, 17.6125, 'percent')
            Green_AOM_no6_W.constant(11.129009, 0.6562, 'W')
            MOT_current_0to100A_no8_A.constant(11.132341, 191.8976, 'A')
            FB_current_0to200A_no14_A.constant(11.133901, 0.2666, 'A')
            MOT_current_0to100A_no8_A.constant(11.139008, 191.8925, 'A')
            FB_current_0to200A_no14_A.constant(11.141901, 0.2728, 'A')
            IR_AOM_no2_percent.constant(11.145002, 17.3645, 'percent')
            Green_AOM_no6_W.constant(11.145009, 0.6476, 'W')
            MOT_current_0to100A_no8_A.constant(11.145675, 191.8874, 'A')
            FB_current_0to200A_no14_A.constant(11.149901, 0.279, 'A')
            MOT_current_0to100A_no8_A.constant(11.152341, 191.8822, 'A')
            FB_current_0to200A_no14_A.constant(11.157901, 0.2852, 'A')
            MOT_current_0to100A_no8_A.constant(11.159008, 191.8771, 'A')
            IR_AOM_no2_percent.constant(11.161002, 17.119, 'percent')
            Green_AOM_no6_W.constant(11.161009, 0.6391, 'W')
            MOT_current_0to100A_no8_A.constant(11.165675, 191.872, 'A')
            FB_current_0to200A_no14_A.constant(11.165901, 0.2914, 'A')
            MOT_current_0to100A_no8_A.constant(11.172341, 191.8669, 'A')
            FB_current_0to200A_no14_A.constant(11.173901, 0.2976, 'A')
            IR_AOM_no2_percent.constant(11.177002, 16.876, 'percent')
            Green_AOM_no6_W.constant(11.177009, 0.6307, 'W')
            MOT_current_0to100A_no8_A.constant(11.179008, 191.8618, 'A')
            FB_current_0to200A_no14_A.constant(11.181901, 0.3038, 'A')
            MOT_current_0to100A_no8_A.constant(11.185674, 191.8566, 'A')
            FB_current_0to200A_no14_A.constant(11.189901, 0.31, 'A')
            MOT_current_0to100A_no8_A.constant(11.192341, 191.8515, 'A')
            IR_AOM_no2_percent.constant(11.193002, 16.6353, 'percent')
            Green_AOM_no6_W.constant(11.193009, 0.6224, 'W')
            FB_current_0to200A_no14_A.constant(11.197901, 0.3162, 'A')
            MOT_current_0to100A_no8_A.constant(11.199008, 191.8464, 'A')
            MOT_current_0to100A_no8_A.constant(11.205674, 191.8413, 'A')
            FB_current_0to200A_no14_A.constant(11.205901, 0.3224, 'A')
            IR_AOM_no2_percent.constant(11.209002, 16.3971, 'percent')
            Green_AOM_no6_W.constant(11.209009, 0.6142, 'W')
            MOT_current_0to100A_no8_A.constant(11.212341, 191.8362, 'A')
            FB_current_0to200A_no14_A.constant(11.213901, 0.3286, 'A')
            MOT_current_0to100A_no8_A.constant(11.219008, 191.831, 'A')
            FB_current_0to200A_no14_A.constant(11.221901, 0.3348, 'A')
            IR_AOM_no2_percent.constant(11.225002, 16.1612, 'percent')
            Green_AOM_no6_W.constant(11.225009, 0.6061, 'W')
            MOT_current_0to100A_no8_A.constant(11.225674, 191.8259, 'A')
            FB_current_0to200A_no14_A.constant(11.229901, 0.341, 'A')
            MOT_current_0to100A_no8_A.constant(11.232341, 191.8208, 'A')
            FB_current_0to200A_no14_A.constant(11.237901, 0.3472, 'A')
            MOT_current_0to100A_no8_A.constant(11.239008, 191.8157, 'A')
            IR_AOM_no2_percent.constant(11.241002, 15.9277, 'percent')
            Green_AOM_no6_W.constant(11.241009, 0.598, 'W')
            MOT_current_0to100A_no8_A.constant(11.245674, 191.8106, 'A')
            FB_current_0to200A_no14_A.constant(11.245901, 0.3534, 'A')
            MOT_current_0to100A_no8_A.constant(11.252341, 191.8054, 'A')
            FB_current_0to200A_no14_A.constant(11.253901, 0.3596, 'A')
            IR_AOM_no2_percent.constant(11.257002, 15.6965, 'percent')
            Green_AOM_no6_W.constant(11.257009, 0.59, 'W')
            MOT_current_0to100A_no8_A.constant(11.259008, 191.8003, 'A')
            FB_current_0to200A_no14_A.constant(11.261901, 0.3658, 'A')
            MOT_current_0to100A_no8_A.constant(11.265674, 191.7952, 'A')
            FB_current_0to200A_no14_A.constant(11.269901, 0.372, 'A')
            MOT_current_0to100A_no8_A.constant(11.272341, 191.7901, 'A')
            IR_AOM_no2_percent.constant(11.273002, 15.4676, 'percent')
            Green_AOM_no6_W.constant(11.273009, 0.5821, 'W')
            FB_current_0to200A_no14_A.constant(11.277901, 0.3782, 'A')
            MOT_current_0to100A_no8_A.constant(11.279008, 191.785, 'A')
            MOT_current_0to100A_no8_A.constant(11.285674, 191.7798, 'A')
            FB_current_0to200A_no14_A.constant(11.285901, 0.3844, 'A')
            IR_AOM_no2_percent.constant(11.289002, 15.241, 'percent')
            Green_AOM_no6_W.constant(11.289009, 0.5743, 'W')
            MOT_current_0to100A_no8_A.constant(11.292341, 191.7747, 'A')
            FB_current_0to200A_no14_A.constant(11.293901, 0.3906, 'A')
            MOT_current_0to100A_no8_A.constant(11.299008, 191.7696, 'A')
            FB_current_0to200A_no14_A.constant(11.301901, 0.3968, 'A')
            IR_AOM_no2_percent.constant(11.305002, 15.0166, 'percent')
            Green_AOM_no6_W.constant(11.305009, 0.5666, 'W')
            MOT_current_0to100A_no8_A.constant(11.305674, 191.7645, 'A')
            FB_current_0to200A_no14_A.constant(11.309901, 0.403, 'A')
            MOT_current_0to100A_no8_A.constant(11.312341, 191.7594, 'A')
            FB_current_0to200A_no14_A.constant(11.317901, 0.4092, 'A')
            MOT_current_0to100A_no8_A.constant(11.319008, 191.7542, 'A')
            IR_AOM_no2_percent.constant(11.321002, 14.7945, 'percent')
            Green_AOM_no6_W.constant(11.321009, 0.5589, 'W')
            MOT_current_0to100A_no8_A.constant(11.325674, 191.7491, 'A')
            FB_current_0to200A_no14_A.constant(11.325901, 0.4154, 'A')
            MOT_current_0to100A_no8_A.constant(11.332341, 191.744, 'A')
            FB_current_0to200A_no14_A.constant(11.333901, 0.4216, 'A')
            IR_AOM_no2_percent.constant(11.337002, 14.5745, 'percent')
            Green_AOM_no6_W.constant(11.337009, 0.5513, 'W')
            MOT_current_0to100A_no8_A.constant(11.339008, 191.7389, 'A')
            FB_current_0to200A_no14_A.constant(11.341901, 0.4278, 'A')
            MOT_current_0to100A_no8_A.constant(11.345674, 191.7338, 'A')
            FB_current_0to200A_no14_A.constant(11.349901, 0.434, 'A')
            MOT_current_0to100A_no8_A.constant(11.352341, 191.7286, 'A')
            IR_AOM_no2_percent.constant(11.353002, 14.3568, 'percent')
            Green_AOM_no6_W.constant(11.353009, 0.5438, 'W')
            FB_current_0to200A_no14_A.constant(11.357901, 0.4402, 'A')
            MOT_current_0to100A_no8_A.constant(11.359008, 191.7235, 'A')
            MOT_current_0to100A_no8_A.constant(11.365674, 191.7184, 'A')
            FB_current_0to200A_no14_A.constant(11.365901, 0.4464, 'A')
            IR_AOM_no2_percent.constant(11.369002, 14.1412, 'percent')
            Green_AOM_no6_W.constant(11.369009, 0.5363, 'W')
            MOT_current_0to100A_no8_A.constant(11.372341, 191.7133, 'A')
            FB_current_0to200A_no14_A.constant(11.373901, 0.4526, 'A')
            MOT_current_0to100A_no8_A.constant(11.379008, 191.7082, 'A')
            FB_current_0to200A_no14_A.constant(11.381901, 0.4588, 'A')
            IR_AOM_no2_percent.constant(11.385002, 13.9278, 'percent')
            Green_AOM_no6_W.constant(11.385009, 0.529, 'W')
            MOT_current_0to100A_no8_A.constant(11.385674, 191.703, 'A')
            FB_current_0to200A_no14_A.constant(11.389901, 0.465, 'A')
            MOT_current_0to100A_no8_A.constant(11.392341, 191.6979, 'A')
            FB_current_0to200A_no14_A.constant(11.397901, 0.4712, 'A')
            MOT_current_0to100A_no8_A.constant(11.399008, 191.6928, 'A')
            IR_AOM_no2_percent.constant(11.401002, 13.7165, 'percent')
            Green_AOM_no6_W.constant(11.401009, 0.5217, 'W')
            MOT_current_0to100A_no8_A.constant(11.405674, 191.6877, 'A')
            FB_current_0to200A_no14_A.constant(11.405901, 0.4774, 'A')
            MOT_current_0to100A_no8_A.constant(11.412341, 191.6826, 'A')
            FB_current_0to200A_no14_A.constant(11.413901, 0.4836, 'A')
            IR_AOM_no2_percent.constant(11.417002, 13.5073, 'percent')
            Green_AOM_no6_W.constant(11.417009, 0.5145, 'W')
            MOT_current_0to100A_no8_A.constant(11.419008, 191.6774, 'A')
            FB_current_0to200A_no14_A.constant(11.421901, 0.4898, 'A')
            MOT_current_0to100A_no8_A.constant(11.425674, 191.6723, 'A')
            FB_current_0to200A_no14_A.constant(11.429901, 0.496, 'A')
            MOT_current_0to100A_no8_A.constant(11.432341, 191.6672, 'A')
            IR_AOM_no2_percent.constant(11.433002, 13.3002, 'percent')
            Green_AOM_no6_W.constant(11.433009, 0.5073, 'W')
            FB_current_0to200A_no14_A.constant(11.437901, 0.5022, 'A')
            MOT_current_0to100A_no8_A.constant(11.439008, 191.6621, 'A')
            MOT_current_0to100A_no8_A.constant(11.445674, 191.657, 'A')
            FB_current_0to200A_no14_A.constant(11.445901, 0.5084, 'A')
            IR_AOM_no2_percent.constant(11.449002, 13.0951, 'percent')
            Green_AOM_no6_W.constant(11.449009, 0.5002, 'W')
            MOT_current_0to100A_no8_A.constant(11.452341, 191.6518, 'A')
            FB_current_0to200A_no14_A.constant(11.453901, 0.5146, 'A')
            MOT_current_0to100A_no8_A.constant(11.459008, 191.6467, 'A')
            FB_current_0to200A_no14_A.constant(11.461901, 0.5208, 'A')
            IR_AOM_no2_percent.constant(11.465002, 12.8921, 'percent')
            Green_AOM_no6_W.constant(11.465009, 0.4932, 'W')
            MOT_current_0to100A_no8_A.constant(11.465674, 191.6416, 'A')
            FB_current_0to200A_no14_A.constant(11.469901, 0.527, 'A')
            MOT_current_0to100A_no8_A.constant(11.472341, 191.6365, 'A')
            FB_current_0to200A_no14_A.constant(11.477901, 0.5332, 'A')
            MOT_current_0to100A_no8_A.constant(11.479008, 191.6314, 'A')
            IR_AOM_no2_percent.constant(11.481002, 12.6911, 'percent')
            Green_AOM_no6_W.constant(11.481009, 0.4863, 'W')
            MOT_current_0to100A_no8_A.constant(11.485674, 191.6262, 'A')
            FB_current_0to200A_no14_A.constant(11.485901, 0.5394, 'A')
            MOT_current_0to100A_no8_A.constant(11.492341, 191.6211, 'A')
            FB_current_0to200A_no14_A.constant(11.493901, 0.5456, 'A')
            IR_AOM_no2_percent.constant(11.497002, 12.4921, 'percent')
            Green_AOM_no6_W.constant(11.497009, 0.4794, 'W')
            MOT_current_0to100A_no8_A.constant(11.499007, 191.616, 'A')
            FB_current_0to200A_no14_A.constant(11.501901, 0.5518, 'A')
            MOT_current_0to100A_no8_A.constant(11.505674, 191.6109, 'A')
            FB_current_0to200A_no14_A.constant(11.509901, 0.558, 'A')
            MOT_current_0to100A_no8_A.constant(11.512341, 191.6058, 'A')
            IR_AOM_no2_percent.constant(11.513002, 12.2951, 'percent')
            Green_AOM_no6_W.constant(11.513009, 0.4726, 'W')
            FB_current_0to200A_no14_A.constant(11.517901, 0.5642, 'A')
            MOT_current_0to100A_no8_A.constant(11.519007, 191.6006, 'A')
            MOT_current_0to100A_no8_A.constant(11.525674, 191.5955, 'A')
            FB_current_0to200A_no14_A.constant(11.525901, 0.5704, 'A')
            IR_AOM_no2_percent.constant(11.529002, 12.1, 'percent')
            Green_AOM_no6_W.constant(11.529009, 0.4659, 'W')
            MOT_current_0to100A_no8_A.constant(11.532341, 191.5904, 'A')
            FB_current_0to200A_no14_A.constant(11.533901, 0.5766, 'A')
            MOT_current_0to100A_no8_A.constant(11.539007, 191.5853, 'A')
            FB_current_0to200A_no14_A.constant(11.541901, 0.5828, 'A')
            IR_AOM_no2_percent.constant(11.545002, 11.9069, 'percent')
            Green_AOM_no6_W.constant(11.545009, 0.4592, 'W')
            MOT_current_0to100A_no8_A.constant(11.545674, 191.5802, 'A')
            FB_current_0to200A_no14_A.constant(11.549901, 0.589, 'A')
            MOT_current_0to100A_no8_A.constant(11.552341, 191.575, 'A')
            FB_current_0to200A_no14_A.constant(11.557901, 0.5952, 'A')
            MOT_current_0to100A_no8_A.constant(11.559007, 191.5699, 'A')
            IR_AOM_no2_percent.constant(11.561002, 11.7157, 'percent')
            Green_AOM_no6_W.constant(11.561009, 0.4526, 'W')
            MOT_current_0to100A_no8_A.constant(11.565674, 191.5648, 'A')
            FB_current_0to200A_no14_A.constant(11.565901, 0.6014, 'A')
            MOT_current_0to100A_no8_A.constant(11.572341, 191.5597, 'A')
            FB_current_0to200A_no14_A.constant(11.573901, 0.6076, 'A')
            IR_AOM_no2_percent.constant(11.577002, 11.5264, 'percent')
            Green_AOM_no6_W.constant(11.577009, 0.4461, 'W')
            MOT_current_0to100A_no8_A.constant(11.579007, 191.5546, 'A')
            FB_current_0to200A_no14_A.constant(11.581901, 0.6138, 'A')
            MOT_current_0to100A_no8_A.constant(11.585674, 191.5494, 'A')
            FB_current_0to200A_no14_A.constant(11.589901, 0.62, 'A')
            MOT_current_0to100A_no8_A.constant(11.592341, 191.5443, 'A')
            IR_AOM_no2_percent.constant(11.593002, 11.339, 'percent')
            Green_AOM_no6_W.constant(11.593009, 0.4396, 'W')
            FB_current_0to200A_no14_A.constant(11.597901, 0.6262, 'A')
            MOT_current_0to100A_no8_A.constant(11.599007, 191.5392, 'A')
            MOT_current_0to100A_no8_A.constant(11.605674, 191.5341, 'A')
            FB_current_0to200A_no14_A.constant(11.605901, 0.6324, 'A')
            IR_AOM_no2_percent.constant(11.609002, 11.1535, 'percent')
            Green_AOM_no6_W.constant(11.609009, 0.4332, 'W')
            MOT_current_0to100A_no8_A.constant(11.612341, 191.529, 'A')
            FB_current_0to200A_no14_A.constant(11.613901, 0.6386, 'A')
            MOT_current_0to100A_no8_A.constant(11.619007, 191.5238, 'A')
            FB_current_0to200A_no14_A.constant(11.621901, 0.6448, 'A')
            IR_AOM_no2_percent.constant(11.625002, 10.9698, 'percent')
            Green_AOM_no6_W.constant(11.625009, 0.4269, 'W')
            MOT_current_0to100A_no8_A.constant(11.625674, 191.5187, 'A')
            FB_current_0to200A_no14_A.constant(11.629901, 0.651, 'A')
            MOT_current_0to100A_no8_A.constant(11.632341, 191.5136, 'A')
            FB_current_0to200A_no14_A.constant(11.637901, 0.6572, 'A')
            MOT_current_0to100A_no8_A.constant(11.639007, 191.5085, 'A')
            IR_AOM_no2_percent.constant(11.641002, 10.7879, 'percent')
            Green_AOM_no6_W.constant(11.641009, 0.4206, 'W')
            MOT_current_0to100A_no8_A.constant(11.645674, 191.5034, 'A')
            FB_current_0to200A_no14_A.constant(11.645901, 0.6634, 'A')
            MOT_current_0to100A_no8_A.constant(11.652341, 191.4982, 'A')
            FB_current_0to200A_no14_A.constant(11.653901, 0.6696, 'A')
            IR_AOM_no2_percent.constant(11.657002, 10.6078, 'percent')
            Green_AOM_no6_W.constant(11.657009, 0.4144, 'W')
            MOT_current_0to100A_no8_A.constant(11.659007, 191.4931, 'A')
            FB_current_0to200A_no14_A.constant(11.661901, 0.6758, 'A')
            MOT_current_0to100A_no8_A.constant(11.665674, 191.488, 'A')
            FB_current_0to200A_no14_A.constant(11.669901, 0.682, 'A')
            MOT_current_0to100A_no8_A.constant(11.672341, 191.4829, 'A')
            IR_AOM_no2_percent.constant(11.673002, 10.4296, 'percent')
            Green_AOM_no6_W.constant(11.673009, 0.4082, 'W')
            FB_current_0to200A_no14_A.constant(11.677901, 0.6882, 'A')
            MOT_current_0to100A_no8_A.constant(11.679007, 191.4778, 'A')
            MOT_current_0to100A_no8_A.constant(11.685674, 191.4726, 'A')
            FB_current_0to200A_no14_A.constant(11.685901, 0.6944, 'A')
            IR_AOM_no2_percent.constant(11.689002, 10.2531, 'percent')
            Green_AOM_no6_W.constant(11.689009, 0.4021, 'W')
            MOT_current_0to100A_no8_A.constant(11.692341, 191.4675, 'A')
            FB_current_0to200A_no14_A.constant(11.693901, 0.7006, 'A')
            MOT_current_0to100A_no8_A.constant(11.699007, 191.4624, 'A')
            FB_current_0to200A_no14_A.constant(11.701901, 0.7068, 'A')
            IR_AOM_no2_percent.constant(11.705002, 10.0783, 'percent')
            Green_AOM_no6_W.constant(11.705009, 0.3961, 'W')
            MOT_current_0to100A_no8_A.constant(11.705674, 191.4573, 'A')
            FB_current_0to200A_no14_A.constant(11.709901, 0.713, 'A')
            MOT_current_0to100A_no8_A.constant(11.712341, 191.4522, 'A')
            FB_current_0to200A_no14_A.constant(11.717901, 0.7192, 'A')
            MOT_current_0to100A_no8_A.constant(11.719007, 191.447, 'A')
            IR_AOM_no2_percent.constant(11.721002, 9.9053, 'percent')
            Green_AOM_no6_W.constant(11.721009, 0.3901, 'W')
            MOT_current_0to100A_no8_A.constant(11.725674, 191.4419, 'A')
            FB_current_0to200A_no14_A.constant(11.725901, 0.7254, 'A')
            MOT_current_0to100A_no8_A.constant(11.732341, 191.4368, 'A')
            FB_current_0to200A_no14_A.constant(11.733901, 0.7316, 'A')
            IR_AOM_no2_percent.constant(11.737002, 9.734, 'percent')
            Green_AOM_no6_W.constant(11.737009, 0.3842, 'W')
            MOT_current_0to100A_no8_A.constant(11.739007, 191.4317, 'A')
            FB_current_0to200A_no14_A.constant(11.741901, 0.7378, 'A')
            MOT_current_0to100A_no8_A.constant(11.745674, 191.4266, 'A')
            FB_current_0to200A_no14_A.constant(11.749901, 0.744, 'A')
            MOT_current_0to100A_no8_A.constant(11.752341, 191.4214, 'A')
            IR_AOM_no2_percent.constant(11.753002, 9.5645, 'percent')
            Green_AOM_no6_W.constant(11.753009, 0.3784, 'W')
            FB_current_0to200A_no14_A.constant(11.757901, 0.7502, 'A')
            MOT_current_0to100A_no8_A.constant(11.759007, 191.4163, 'A')
            MOT_current_0to100A_no8_A.constant(11.765674, 191.4112, 'A')
            FB_current_0to200A_no14_A.constant(11.765901, 0.7564, 'A')
            IR_AOM_no2_percent.constant(11.769002, 9.3966, 'percent')
            Green_AOM_no6_W.constant(11.769009, 0.3726, 'W')
            MOT_current_0to100A_no8_A.constant(11.772341, 191.4061, 'A')
            FB_current_0to200A_no14_A.constant(11.773901, 0.7626, 'A')
            MOT_current_0to100A_no8_A.constant(11.779007, 191.401, 'A')
            FB_current_0to200A_no14_A.constant(11.781901, 0.7688, 'A')
            IR_AOM_no2_percent.constant(11.785002, 9.2304, 'percent')
            Green_AOM_no6_W.constant(11.785009, 0.3668, 'W')
            MOT_current_0to100A_no8_A.constant(11.785674, 191.3958, 'A')
            FB_current_0to200A_no14_A.constant(11.789900, 0.775, 'A')
            MOT_current_0to100A_no8_A.constant(11.792341, 191.3907, 'A')
            FB_current_0to200A_no14_A.constant(11.797900, 0.7812, 'A')
            MOT_current_0to100A_no8_A.constant(11.799007, 191.3856, 'A')
            IR_AOM_no2_percent.constant(11.801002, 9.0658, 'percent')
            Green_AOM_no6_W.constant(11.801009, 0.3612, 'W')
            MOT_current_0to100A_no8_A.constant(11.805674, 191.3805, 'A')
            FB_current_0to200A_no14_A.constant(11.805900, 0.7874, 'A')
            MOT_current_0to100A_no8_A.constant(11.812341, 191.3754, 'A')
            FB_current_0to200A_no14_A.constant(11.813900, 0.7936, 'A')
            IR_AOM_no2_percent.constant(11.817002, 8.9029, 'percent')
            Green_AOM_no6_W.constant(11.817009, 0.3555, 'W')
            MOT_current_0to100A_no8_A.constant(11.819007, 191.3702, 'A')
            FB_current_0to200A_no14_A.constant(11.821900, 0.7998, 'A')
            MOT_current_0to100A_no8_A.constant(11.825674, 191.3651, 'A')
            FB_current_0to200A_no14_A.constant(11.829900, 0.806, 'A')
            MOT_current_0to100A_no8_A.constant(11.832340, 191.36, 'A')
            IR_AOM_no2_percent.constant(11.833002, 8.7416, 'percent')
            Green_AOM_no6_W.constant(11.833009, 0.35, 'W')
            FB_current_0to200A_no14_A.constant(11.837900, 0.8122, 'A')
            MOT_current_0to100A_no8_A.constant(11.839007, 191.3549, 'A')
            MOT_current_0to100A_no8_A.constant(11.845674, 191.3498, 'A')
            FB_current_0to200A_no14_A.constant(11.845900, 0.8184, 'A')
            IR_AOM_no2_percent.constant(11.849002, 8.5819, 'percent')
            Green_AOM_no6_W.constant(11.849009, 0.3445, 'W')
            MOT_current_0to100A_no8_A.constant(11.852340, 191.3446, 'A')
            FB_current_0to200A_no14_A.constant(11.853900, 0.8246, 'A')
            MOT_current_0to100A_no8_A.constant(11.859007, 191.3395, 'A')
            FB_current_0to200A_no14_A.constant(11.861900, 0.8308, 'A')
            IR_AOM_no2_percent.constant(11.865002, 8.4238, 'percent')
            Green_AOM_no6_W.constant(11.865009, 0.339, 'W')
            MOT_current_0to100A_no8_A.constant(11.865674, 191.3344, 'A')
            FB_current_0to200A_no14_A.constant(11.869900, 0.837, 'A')
            MOT_current_0to100A_no8_A.constant(11.872340, 191.3293, 'A')
            FB_current_0to200A_no14_A.constant(11.877900, 0.8432, 'A')
            MOT_current_0to100A_no8_A.constant(11.879007, 191.3242, 'A')
            IR_AOM_no2_percent.constant(11.881002, 8.2672, 'percent')
            Green_AOM_no6_W.constant(11.881009, 0.3336, 'W')
            MOT_current_0to100A_no8_A.constant(11.885674, 191.319, 'A')
            FB_current_0to200A_no14_A.constant(11.885900, 0.8494, 'A')
            MOT_current_0to100A_no8_A.constant(11.892340, 191.3139, 'A')
            FB_current_0to200A_no14_A.constant(11.893900, 0.8556, 'A')
            IR_AOM_no2_percent.constant(11.897002, 8.1122, 'percent')
            Green_AOM_no6_W.constant(11.897009, 0.3282, 'W')
            MOT_current_0to100A_no8_A.constant(11.899007, 191.3088, 'A')
            FB_current_0to200A_no14_A.constant(11.901900, 0.8618, 'A')
            MOT_current_0to100A_no8_A.constant(11.905674, 191.3037, 'A')
            FB_current_0to200A_no14_A.constant(11.909900, 0.868, 'A')
            MOT_current_0to100A_no8_A.constant(11.912340, 191.2986, 'A')
            IR_AOM_no2_percent.constant(11.913002, 7.9588, 'percent')
            Green_AOM_no6_W.constant(11.913009, 0.3229, 'W')
            FB_current_0to200A_no14_A.constant(11.917900, 0.8742, 'A')
            MOT_current_0to100A_no8_A.constant(11.919007, 191.2934, 'A')
            MOT_current_0to100A_no8_A.constant(11.925674, 191.2883, 'A')
            FB_current_0to200A_no14_A.constant(11.925900, 0.8804, 'A')
            IR_AOM_no2_percent.constant(11.929002, 7.8069, 'percent')
            Green_AOM_no6_W.constant(11.929009, 0.3177, 'W')
            MOT_current_0to100A_no8_A.constant(11.932340, 191.2832, 'A')
            FB_current_0to200A_no14_A.constant(11.933900, 0.8866, 'A')
            MOT_current_0to100A_no8_A.constant(11.939007, 191.2781, 'A')
            FB_current_0to200A_no14_A.constant(11.941900, 0.8928, 'A')
            IR_AOM_no2_percent.constant(11.945002, 7.6565, 'percent')
            Green_AOM_no6_W.constant(11.945009, 0.3125, 'W')
            MOT_current_0to100A_no8_A.constant(11.945674, 191.273, 'A')
            FB_current_0to200A_no14_A.constant(11.949900, 0.899, 'A')
            MOT_current_0to100A_no8_A.constant(11.952340, 191.2678, 'A')
            FB_current_0to200A_no14_A.constant(11.957900, 0.9052, 'A')
            MOT_current_0to100A_no8_A.constant(11.959007, 191.2627, 'A')
            IR_AOM_no2_percent.constant(11.961002, 7.5076, 'percent')
            Green_AOM_no6_W.constant(11.961009, 0.3074, 'W')
            MOT_current_0to100A_no8_A.constant(11.965674, 191.2576, 'A')
            FB_current_0to200A_no14_A.constant(11.965900, 0.9114, 'A')
            MOT_current_0to100A_no8_A.constant(11.972340, 191.2525, 'A')
            FB_current_0to200A_no14_A.constant(11.973900, 0.9176, 'A')
            IR_AOM_no2_percent.constant(11.977002, 7.3602, 'percent')
            Green_AOM_no6_W.constant(11.977009, 0.3023, 'W')
            MOT_current_0to100A_no8_A.constant(11.979007, 191.2474, 'A')
            FB_current_0to200A_no14_A.constant(11.981900, 0.9238, 'A')
            MOT_current_0to100A_no8_A.constant(11.985674, 191.2422, 'A')
            FB_current_0to200A_no14_A.constant(11.989900, 0.93, 'A')
            MOT_current_0to100A_no8_A.constant(11.992340, 191.2371, 'A')
            IR_AOM_no2_percent.constant(11.993002, 7.2142, 'percent')
            Green_AOM_no6_W.constant(11.993009, 0.2972, 'W')
            FB_current_0to200A_no14_A.constant(11.997900, 0.9362, 'A')
            MOT_current_0to100A_no8_A.constant(11.999007, 191.232, 'A')
            MOT_current_0to100A_no8_A.constant(12.000000, 191.232, 'A')
            FB_current_0to200A_no14_A.constant(12.005900, 0.9424, 'A')
            IR_AOM_no2_percent.constant(12.009002, 7.0697, 'percent')
            Green_AOM_no6_W.constant(12.009009, 0.2923, 'W')
            FB_current_0to200A_no14_A.constant(12.013900, 0.9486, 'A')
            FB_current_0to200A_no14_A.constant(12.021900, 0.9548, 'A')
            IR_AOM_no2_percent.constant(12.025002, 6.9266, 'percent')
            Green_AOM_no6_W.constant(12.025009, 0.2873, 'W')
            FB_current_0to200A_no14_A.constant(12.029900, 0.961, 'A')
            FB_current_0to200A_no14_A.constant(12.037900, 0.9672, 'A')
            IR_AOM_no2_percent.constant(12.041002, 6.785, 'percent')
            Green_AOM_no6_W.constant(12.041009, 0.2824, 'W')
            FB_current_0to200A_no14_A.constant(12.045900, 0.9734, 'A')
            FB_current_0to200A_no14_A.constant(12.053900, 0.9796, 'A')
            IR_AOM_no2_percent.constant(12.057002, 6.6448, 'percent')
            Green_AOM_no6_W.constant(12.057009, 0.2776, 'W')
            FB_current_0to200A_no14_A.constant(12.061900, 0.9858, 'A')
            FB_current_0to200A_no14_A.constant(12.069900, 0.992, 'A')
            IR_AOM_no2_percent.constant(12.073002, 6.5059, 'percent')
            Green_AOM_no6_W.constant(12.073009, 0.2728, 'W')
            FB_current_0to200A_no14_A.constant(12.077900, 0.9982, 'A')
            FB_current_0to200A_no14_A.constant(12.085900, 1.0044, 'A')
            IR_AOM_no2_percent.constant(12.089002, 6.3685, 'percent')
            Green_AOM_no6_W.constant(12.089009, 0.268, 'W')
            FB_current_0to200A_no14_A.constant(12.093900, 1.0106, 'A')
            FB_current_0to200A_no14_A.constant(12.101900, 1.0168, 'A')
            IR_AOM_no2_percent.constant(12.105002, 6.2324, 'percent')
            Green_AOM_no6_W.constant(12.105009, 0.2634, 'W')
            FB_current_0to200A_no14_A.constant(12.109900, 1.023, 'A')
            FB_current_0to200A_no14_A.constant(12.117900, 1.0292, 'A')
            IR_AOM_no2_percent.constant(12.121002, 6.0977, 'percent')
            Green_AOM_no6_W.constant(12.121009, 0.2587, 'W')
            FB_current_0to200A_no14_A.constant(12.125900, 1.0354, 'A')
            FB_current_0to200A_no14_A.constant(12.133900, 1.0416, 'A')
            IR_AOM_no2_percent.constant(12.137002, 5.9643, 'percent')
            Green_AOM_no6_W.constant(12.137009, 0.2541, 'W')
            FB_current_0to200A_no14_A.constant(12.141900, 1.0478, 'A')
            FB_current_0to200A_no14_A.constant(12.149900, 1.054, 'A')
            IR_AOM_no2_percent.constant(12.153002, 5.8322, 'percent')
            Green_AOM_no6_W.constant(12.153009, 0.2495, 'W')
            FB_current_0to200A_no14_A.constant(12.157900, 1.0602, 'A')
            FB_current_0to200A_no14_A.constant(12.165900, 1.0664, 'A')
            IR_AOM_no2_percent.constant(12.169002, 5.7014, 'percent')
            Green_AOM_no6_W.constant(12.169009, 0.245, 'W')
            FB_current_0to200A_no14_A.constant(12.173900, 1.0726, 'A')
            FB_current_0to200A_no14_A.constant(12.181900, 1.0788, 'A')
            IR_AOM_no2_percent.constant(12.185002, 5.572, 'percent')
            Green_AOM_no6_W.constant(12.185009, 0.2406, 'W')
            FB_current_0to200A_no14_A.constant(12.189900, 1.085, 'A')
            FB_current_0to200A_no14_A.constant(12.197900, 1.0912, 'A')
            IR_AOM_no2_percent.constant(12.201002, 5.4438, 'percent')
            Green_AOM_no6_W.constant(12.201009, 0.2361, 'W')
            FB_current_0to200A_no14_A.constant(12.205900, 1.0974, 'A')
            FB_current_0to200A_no14_A.constant(12.213900, 1.1036, 'A')
            IR_AOM_no2_percent.constant(12.217002, 5.3169, 'percent')
            Green_AOM_no6_W.constant(12.217009, 0.2318, 'W')
            FB_current_0to200A_no14_A.constant(12.221900, 1.1098, 'A')
            FB_current_0to200A_no14_A.constant(12.229900, 1.116, 'A')
            IR_AOM_no2_percent.constant(12.233002, 5.1913, 'percent')
            Green_AOM_no6_W.constant(12.233009, 0.2274, 'W')
            FB_current_0to200A_no14_A.constant(12.237900, 1.1222, 'A')
            FB_current_0to200A_no14_A.constant(12.245900, 1.1284, 'A')
            IR_AOM_no2_percent.constant(12.249002, 5.0669, 'percent')
            Green_AOM_no6_W.constant(12.249009, 0.2231, 'W')
            Comp_coils_Z_ON_no3per3_on.go_high(12.249900)
            CompCoil_z_no20_A.constant(12.250001, 1.0, 'A')
            CompCoil_z_no20_A.constant(12.252001, 1.0197, 'A')
            FB_current_0to200A_no14_A.constant(12.253900, 1.1346, 'A')
            CompCoil_z_no20_A.constant(12.254001, 1.0395, 'A')
            CompCoil_z_no20_A.constant(12.256001, 1.0592, 'A')
            CompCoil_z_no20_A.constant(12.258001, 1.0789, 'A')
            CompCoil_z_no20_A.constant(12.260001, 1.0987, 'A')
            FB_current_0to200A_no14_A.constant(12.261900, 1.1408, 'A')
            CompCoil_z_no20_A.constant(12.262001, 1.1184, 'A')
            CompCoil_z_no20_A.constant(12.264001, 1.1381, 'A')
            IR_AOM_no2_percent.constant(12.265002, 4.9438, 'percent')
            Green_AOM_no6_W.constant(12.265009, 0.2189, 'W')
            CompCoil_z_no20_A.constant(12.266001, 1.1579, 'A')
            CompCoil_z_no20_A.constant(12.268001, 1.1776, 'A')
            FB_current_0to200A_no14_A.constant(12.269900, 1.147, 'A')
            CompCoil_z_no20_A.constant(12.270001, 1.1973, 'A')
            CompCoil_z_no20_A.constant(12.272001, 1.2171, 'A')
            CompCoil_z_no20_A.constant(12.274001, 1.2368, 'A')
            CompCoil_z_no20_A.constant(12.276001, 1.2565, 'A')
            FB_current_0to200A_no14_A.constant(12.277900, 1.1532, 'A')
            CompCoil_z_no20_A.constant(12.278001, 1.2763, 'A')
            CompCoil_z_no20_A.constant(12.280001, 1.296, 'A')
            IR_AOM_no2_percent.constant(12.281002, 4.8219, 'percent')
            Green_AOM_no6_W.constant(12.281009, 0.2147, 'W')
            CompCoil_z_no20_A.constant(12.282001, 1.3157, 'A')
            CompCoil_z_no20_A.constant(12.284001, 1.3355, 'A')
            FB_current_0to200A_no14_A.constant(12.285900, 1.1594, 'A')
            CompCoil_z_no20_A.constant(12.286001, 1.3552, 'A')
            CompCoil_z_no20_A.constant(12.288001, 1.3749, 'A')
            CompCoil_z_no20_A.constant(12.290001, 1.3947, 'A')
            CompCoil_z_no20_A.constant(12.292001, 1.4144, 'A')
            FB_current_0to200A_no14_A.constant(12.293900, 1.1656, 'A')
            CompCoil_z_no20_A.constant(12.294001, 1.4341, 'A')
            CompCoil_z_no20_A.constant(12.296001, 1.4539, 'A')
            IR_AOM_no2_percent.constant(12.297002, 4.7012, 'percent')
            Green_AOM_no6_W.constant(12.297009, 0.2105, 'W')
            CompCoil_z_no20_A.constant(12.298001, 1.4736, 'A')
            CompCoil_z_no20_A.constant(12.300001, 1.4933, 'A')
            FB_current_0to200A_no14_A.constant(12.301900, 1.1718, 'A')
            CompCoil_z_no20_A.constant(12.302001, 1.5131, 'A')
            CompCoil_z_no20_A.constant(12.304001, 1.5328, 'A')
            CompCoil_z_no20_A.constant(12.306001, 1.5525, 'A')
            CompCoil_z_no20_A.constant(12.308001, 1.5723, 'A')
            FB_current_0to200A_no14_A.constant(12.309900, 1.178, 'A')
            CompCoil_z_no20_A.constant(12.310001, 1.592, 'A')
            CompCoil_z_no20_A.constant(12.312001, 1.6117, 'A')
            IR_AOM_no2_percent.constant(12.313002, 4.5817, 'percent')
            Green_AOM_no6_W.constant(12.313009, 0.2064, 'W')
            CompCoil_z_no20_A.constant(12.314001, 1.6315, 'A')
            CompCoil_z_no20_A.constant(12.316001, 1.6512, 'A')
            FB_current_0to200A_no14_A.constant(12.317900, 1.1842, 'A')
            CompCoil_z_no20_A.constant(12.318001, 1.6709, 'A')
            CompCoil_z_no20_A.constant(12.320001, 1.6907, 'A')
            CompCoil_z_no20_A.constant(12.322001, 1.7104, 'A')
            CompCoil_z_no20_A.constant(12.324001, 1.7301, 'A')
            FB_current_0to200A_no14_A.constant(12.325900, 1.1904, 'A')
            CompCoil_z_no20_A.constant(12.326001, 1.7499, 'A')
            CompCoil_z_no20_A.constant(12.328001, 1.7696, 'A')
            IR_AOM_no2_percent.constant(12.329002, 4.4634, 'percent')
            Green_AOM_no6_W.constant(12.329009, 0.2023, 'W')
            CompCoil_z_no20_A.constant(12.330001, 1.7893, 'A')
            CompCoil_z_no20_A.constant(12.332001, 1.8091, 'A')
            FB_current_0to200A_no14_A.constant(12.333900, 1.1966, 'A')
            CompCoil_z_no20_A.constant(12.334001, 1.8288, 'A')
            CompCoil_z_no20_A.constant(12.336001, 1.8485, 'A')
            CompCoil_z_no20_A.constant(12.338001, 1.8683, 'A')
            CompCoil_z_no20_A.constant(12.340001, 1.888, 'A')
            FB_current_0to200A_no14_A.constant(12.341900, 1.2028, 'A')
            CompCoil_z_no20_A.constant(12.342001, 1.9077, 'A')
            CompCoil_z_no20_A.constant(12.344001, 1.9275, 'A')
            IR_AOM_no2_percent.constant(12.345002, 4.3463, 'percent')
            Green_AOM_no6_W.constant(12.345009, 0.1982, 'W')
            CompCoil_z_no20_A.constant(12.346001, 1.9472, 'A')
            CompCoil_z_no20_A.constant(12.348001, 1.9669, 'A')
            FB_current_0to200A_no14_A.constant(12.349900, 1.209, 'A')
            CompCoil_z_no20_A.constant(12.350001, 1.9867, 'A')
            CompCoil_z_no20_A.constant(12.352001, 2.0064, 'A')
            CompCoil_z_no20_A.constant(12.354001, 2.0261, 'A')
            CompCoil_z_no20_A.constant(12.356001, 2.0459, 'A')
            FB_current_0to200A_no14_A.constant(12.357900, 1.2152, 'A')
            CompCoil_z_no20_A.constant(12.358001, 2.0656, 'A')
            CompCoil_z_no20_A.constant(12.360001, 2.0853, 'A')
            IR_AOM_no2_percent.constant(12.361002, 4.2303, 'percent')
            Green_AOM_no6_W.constant(12.361009, 0.1942, 'W')
            CompCoil_z_no20_A.constant(12.362001, 2.1051, 'A')
            CompCoil_z_no20_A.constant(12.364001, 2.1248, 'A')
            FB_current_0to200A_no14_A.constant(12.365900, 1.2214, 'A')
            CompCoil_z_no20_A.constant(12.366001, 2.1445, 'A')
            CompCoil_z_no20_A.constant(12.368001, 2.1643, 'A')
            CompCoil_z_no20_A.constant(12.370001, 2.184, 'A')
            CompCoil_z_no20_A.constant(12.372001, 2.2037, 'A')
            FB_current_0to200A_no14_A.constant(12.373900, 1.2276, 'A')
            CompCoil_z_no20_A.constant(12.374001, 2.2235, 'A')
            CompCoil_z_no20_A.constant(12.376001, 2.2432, 'A')
            IR_AOM_no2_percent.constant(12.377002, 4.1155, 'percent')
            Green_AOM_no6_W.constant(12.377009, 0.1903, 'W')
            CompCoil_z_no20_A.constant(12.378001, 2.2629, 'A')
            CompCoil_z_no20_A.constant(12.380001, 2.2827, 'A')
            FB_current_0to200A_no14_A.constant(12.381900, 1.2338, 'A')
            CompCoil_z_no20_A.constant(12.382001, 2.3024, 'A')
            CompCoil_z_no20_A.constant(12.384001, 2.3221, 'A')
            CompCoil_z_no20_A.constant(12.386001, 2.3419, 'A')
            CompCoil_z_no20_A.constant(12.388001, 2.3616, 'A')
            FB_current_0to200A_no14_A.constant(12.389900, 1.24, 'A')
            CompCoil_z_no20_A.constant(12.390001, 2.3813, 'A')
            CompCoil_z_no20_A.constant(12.392001, 2.4011, 'A')
            IR_AOM_no2_percent.constant(12.393002, 4.0018, 'percent')
            Green_AOM_no6_W.constant(12.393009, 0.1864, 'W')
            CompCoil_z_no20_A.constant(12.394001, 2.4208, 'A')
            CompCoil_z_no20_A.constant(12.396001, 2.4405, 'A')
            FB_current_0to200A_no14_A.constant(12.397900, 1.2462, 'A')
            CompCoil_z_no20_A.constant(12.398001, 2.4603, 'A')
            CompCoil_z_no20_A.constant(12.400001, 2.48, 'A')
            CompCoil_z_no20_A.constant(12.402000, 2.4997, 'A')
            CompCoil_z_no20_A.constant(12.404000, 2.5195, 'A')
            FB_current_0to200A_no14_A.constant(12.405900, 1.2524, 'A')
            CompCoil_z_no20_A.constant(12.406000, 2.5392, 'A')
            CompCoil_z_no20_A.constant(12.408000, 2.5589, 'A')
            IR_AOM_no2_percent.constant(12.409002, 3.8893, 'percent')
            Green_AOM_no6_W.constant(12.409009, 0.1825, 'W')
            CompCoil_z_no20_A.constant(12.410000, 2.5787, 'A')
            CompCoil_z_no20_A.constant(12.412000, 2.5984, 'A')
            FB_current_0to200A_no14_A.constant(12.413900, 1.2586, 'A')
            CompCoil_z_no20_A.constant(12.414000, 2.6181, 'A')
            CompCoil_z_no20_A.constant(12.416000, 2.6379, 'A')
            CompCoil_z_no20_A.constant(12.418000, 2.6576, 'A')
            CompCoil_z_no20_A.constant(12.420000, 2.6773, 'A')
            FB_current_0to200A_no14_A.constant(12.421900, 1.2648, 'A')
            CompCoil_z_no20_A.constant(12.422000, 2.6971, 'A')
            CompCoil_z_no20_A.constant(12.424000, 2.7168, 'A')
            IR_AOM_no2_percent.constant(12.425002, 3.7779, 'percent')
            Green_AOM_no6_W.constant(12.425009, 0.1786, 'W')
            CompCoil_z_no20_A.constant(12.426000, 2.7365, 'A')
            CompCoil_z_no20_A.constant(12.428000, 2.7563, 'A')
            FB_current_0to200A_no14_A.constant(12.429900, 1.271, 'A')
            CompCoil_z_no20_A.constant(12.430000, 2.776, 'A')
            CompCoil_z_no20_A.constant(12.432000, 2.7957, 'A')
            CompCoil_z_no20_A.constant(12.434000, 2.8155, 'A')
            CompCoil_z_no20_A.constant(12.436000, 2.8352, 'A')
            FB_current_0to200A_no14_A.constant(12.437900, 1.2772, 'A')
            CompCoil_z_no20_A.constant(12.438000, 2.8549, 'A')
            CompCoil_z_no20_A.constant(12.440000, 2.8747, 'A')
            IR_AOM_no2_percent.constant(12.441002, 3.6675, 'percent')
            Green_AOM_no6_W.constant(12.441009, 0.1748, 'W')
            CompCoil_z_no20_A.constant(12.442000, 2.8944, 'A')
            CompCoil_z_no20_A.constant(12.444000, 2.9141, 'A')
            FB_current_0to200A_no14_A.constant(12.445900, 1.2834, 'A')
            CompCoil_z_no20_A.constant(12.446000, 2.9339, 'A')
            CompCoil_z_no20_A.constant(12.448000, 2.9536, 'A')
            CompCoil_z_no20_A.constant(12.450000, 2.9733, 'A')
            CompCoil_z_no20_A.constant(12.452000, 2.9931, 'A')
            FB_current_0to200A_no14_A.constant(12.453900, 1.2896, 'A')
            CompCoil_z_no20_A.constant(12.454000, 3.0128, 'A')
            CompCoil_z_no20_A.constant(12.456000, 3.0325, 'A')
            IR_AOM_no2_percent.constant(12.457002, 3.5583, 'percent')
            Green_AOM_no6_W.constant(12.457009, 0.171, 'W')
            CompCoil_z_no20_A.constant(12.458000, 3.0523, 'A')
            CompCoil_z_no20_A.constant(12.460000, 3.072, 'A')
            FB_current_0to200A_no14_A.constant(12.461900, 1.2958, 'A')
            CompCoil_z_no20_A.constant(12.462000, 3.0917, 'A')
            CompCoil_z_no20_A.constant(12.464000, 3.1115, 'A')
            CompCoil_z_no20_A.constant(12.466000, 3.1312, 'A')
            CompCoil_z_no20_A.constant(12.468000, 3.1509, 'A')
            FB_current_0to200A_no14_A.constant(12.469900, 1.302, 'A')
            CompCoil_z_no20_A.constant(12.470000, 3.1707, 'A')
            CompCoil_z_no20_A.constant(12.472000, 3.1904, 'A')
            IR_AOM_no2_percent.constant(12.473002, 3.4502, 'percent')
            Green_AOM_no6_W.constant(12.473009, 0.1673, 'W')
            CompCoil_z_no20_A.constant(12.474000, 3.2101, 'A')
            CompCoil_z_no20_A.constant(12.476000, 3.2299, 'A')
            FB_current_0to200A_no14_A.constant(12.477900, 1.3082, 'A')
            CompCoil_z_no20_A.constant(12.478000, 3.2496, 'A')
            CompCoil_z_no20_A.constant(12.480000, 3.2693, 'A')
            CompCoil_z_no20_A.constant(12.482000, 3.2891, 'A')
            CompCoil_z_no20_A.constant(12.484000, 3.3088, 'A')
            FB_current_0to200A_no14_A.constant(12.485900, 1.3144, 'A')
            CompCoil_z_no20_A.constant(12.486000, 3.3285, 'A')
            CompCoil_z_no20_A.constant(12.488000, 3.3483, 'A')
            IR_AOM_no2_percent.constant(12.489002, 3.3432, 'percent')
            Green_AOM_no6_W.constant(12.489009, 0.1636, 'W')
            CompCoil_z_no20_A.constant(12.490000, 3.368, 'A')
            CompCoil_z_no20_A.constant(12.492000, 3.3877, 'A')
            FB_current_0to200A_no14_A.constant(12.493900, 1.3206, 'A')
            CompCoil_z_no20_A.constant(12.494000, 3.4075, 'A')
            CompCoil_z_no20_A.constant(12.496000, 3.4272, 'A')
            CompCoil_z_no20_A.constant(12.498000, 3.4469, 'A')
            CompCoil_z_no20_A.constant(12.500000, 3.4667, 'A')
            FB_current_0to200A_no14_A.constant(12.501900, 1.3268, 'A')
            CompCoil_z_no20_A.constant(12.502000, 3.4864, 'A')
            CompCoil_z_no20_A.constant(12.504000, 3.5061, 'A')
            IR_AOM_no2_percent.constant(12.505002, 3.2372, 'percent')
            Green_AOM_no6_W.constant(12.505009, 0.16, 'W')
            CompCoil_z_no20_A.constant(12.506000, 3.5259, 'A')
            CompCoil_z_no20_A.constant(12.508000, 3.5456, 'A')
            FB_current_0to200A_no14_A.constant(12.509900, 1.333, 'A')
            CompCoil_z_no20_A.constant(12.510000, 3.5653, 'A')
            CompCoil_z_no20_A.constant(12.512000, 3.5851, 'A')
            CompCoil_z_no20_A.constant(12.514000, 3.6048, 'A')
            CompCoil_z_no20_A.constant(12.516000, 3.6245, 'A')
            FB_current_0to200A_no14_A.constant(12.517900, 1.3392, 'A')
            CompCoil_z_no20_A.constant(12.518000, 3.6443, 'A')
            CompCoil_z_no20_A.constant(12.520000, 3.664, 'A')
            IR_AOM_no2_percent.constant(12.521002, 3.1322, 'percent')
            Green_AOM_no6_W.constant(12.521009, 0.1563, 'W')
            CompCoil_z_no20_A.constant(12.522000, 3.6837, 'A')
            CompCoil_z_no20_A.constant(12.524000, 3.7035, 'A')
            FB_current_0to200A_no14_A.constant(12.525900, 1.3454, 'A')
            CompCoil_z_no20_A.constant(12.526000, 3.7232, 'A')
            CompCoil_z_no20_A.constant(12.528000, 3.7429, 'A')
            CompCoil_z_no20_A.constant(12.530000, 3.7627, 'A')
            CompCoil_z_no20_A.constant(12.532000, 3.7824, 'A')
            FB_current_0to200A_no14_A.constant(12.533900, 1.3516, 'A')
            CompCoil_z_no20_A.constant(12.534000, 3.8021, 'A')
            CompCoil_z_no20_A.constant(12.536000, 3.8219, 'A')
            IR_AOM_no2_percent.constant(12.537002, 3.0284, 'percent')
            Green_AOM_no6_W.constant(12.537009, 0.1528, 'W')
            CompCoil_z_no20_A.constant(12.538000, 3.8416, 'A')
            CompCoil_z_no20_A.constant(12.540000, 3.8613, 'A')
            FB_current_0to200A_no14_A.constant(12.541900, 1.3578, 'A')
            CompCoil_z_no20_A.constant(12.542000, 3.8811, 'A')
            CompCoil_z_no20_A.constant(12.544000, 3.9008, 'A')
            CompCoil_z_no20_A.constant(12.546000, 3.9205, 'A')
            CompCoil_z_no20_A.constant(12.548000, 3.94, 'A')
            FB_current_0to200A_no14_A.constant(12.549900, 1.364, 'A')
            IR_AOM_no2_percent.constant(12.553002, 2.9255, 'percent')
            Green_AOM_no6_W.constant(12.553009, 0.1492, 'W')
            FB_current_0to200A_no14_A.constant(12.557900, 1.3702, 'A')
            FB_current_0to200A_no14_A.constant(12.565900, 1.3764, 'A')
            IR_AOM_no2_percent.constant(12.569002, 2.8237, 'percent')
            Green_AOM_no6_W.constant(12.569009, 0.1457, 'W')
            FB_current_0to200A_no14_A.constant(12.573900, 1.3826, 'A')
            FB_current_0to200A_no14_A.constant(12.581900, 1.3888, 'A')
            IR_AOM_no2_percent.constant(12.585002, 2.7229, 'percent')
            Green_AOM_no6_W.constant(12.585009, 0.1422, 'W')
            FB_current_0to200A_no14_A.constant(12.589900, 1.395, 'A')
            FB_current_0to200A_no14_A.constant(12.597900, 1.4012, 'A')
            IR_AOM_no2_percent.constant(12.601002, 2.623, 'percent')
            Green_AOM_no6_W.constant(12.601009, 0.1388, 'W')
            FB_current_0to200A_no14_A.constant(12.605900, 1.4074, 'A')
            FB_current_0to200A_no14_A.constant(12.613900, 1.4136, 'A')
            IR_AOM_no2_percent.constant(12.617002, 2.5242, 'percent')
            Green_AOM_no6_W.constant(12.617009, 0.1354, 'W')
            FB_current_0to200A_no14_A.constant(12.621900, 1.4198, 'A')
            FB_current_0to200A_no14_A.constant(12.629900, 1.426, 'A')
            IR_AOM_no2_percent.constant(12.633002, 2.4264, 'percent')
            Green_AOM_no6_W.constant(12.633009, 0.132, 'W')
            FB_current_0to200A_no14_A.constant(12.637900, 1.4322, 'A')
            FB_current_0to200A_no14_A.constant(12.645900, 1.4384, 'A')
            IR_AOM_no2_percent.constant(12.649002, 2.3295, 'percent')
            Green_AOM_no6_W.constant(12.649009, 0.1286, 'W')
            FB_current_0to200A_no14_A.constant(12.653900, 1.4446, 'A')
            FB_current_0to200A_no14_A.constant(12.661900, 1.4508, 'A')
            IR_AOM_no2_percent.constant(12.665002, 2.2336, 'percent')
            Green_AOM_no6_W.constant(12.665009, 0.1253, 'W')
            FB_current_0to200A_no14_A.constant(12.669900, 1.457, 'A')
            FB_current_0to200A_no14_A.constant(12.677900, 1.4632, 'A')
            IR_AOM_no2_percent.constant(12.681002, 2.1387, 'percent')
            Green_AOM_no6_W.constant(12.681009, 0.122, 'W')
            FB_current_0to200A_no14_A.constant(12.685900, 1.4694, 'A')
            FB_current_0to200A_no14_A.constant(12.693900, 1.4756, 'A')
            IR_AOM_no2_percent.constant(12.697002, 2.0447, 'percent')
            Green_AOM_no6_W.constant(12.697009, 0.1188, 'W')
            FB_current_0to200A_no14_A.constant(12.701900, 1.4818, 'A')
            FB_current_0to200A_no14_A.constant(12.709900, 1.488, 'A')
            IR_AOM_no2_percent.constant(12.713002, 1.9516, 'percent')
            Green_AOM_no6_W.constant(12.713009, 0.1156, 'W')
            FB_current_0to200A_no14_A.constant(12.717900, 1.4942, 'A')
            FB_current_0to200A_no14_A.constant(12.725900, 1.5004, 'A')
            IR_AOM_no2_percent.constant(12.729002, 1.8595, 'percent')
            Green_AOM_no6_W.constant(12.729009, 0.1124, 'W')
            FB_current_0to200A_no14_A.constant(12.733900, 1.5066, 'A')
            FB_current_0to200A_no14_A.constant(12.741900, 1.5128, 'A')
            IR_AOM_no2_percent.constant(12.745002, 1.7683, 'percent')
            Green_AOM_no6_W.constant(12.745009, 0.1093, 'W')
            FB_current_0to200A_no14_A.constant(12.749900, 1.519, 'A')
            FB_current_0to200A_no14_A.constant(12.757900, 1.5252, 'A')
            IR_AOM_no2_percent.constant(12.761002, 1.6779, 'percent')
            Green_AOM_no6_W.constant(12.761009, 0.1061, 'W')
            FB_current_0to200A_no14_A.constant(12.765900, 1.5314, 'A')
            FB_current_0to200A_no14_A.constant(12.773900, 1.5376, 'A')
            IR_AOM_no2_percent.constant(12.777002, 1.5885, 'percent')
            Green_AOM_no6_W.constant(12.777009, 0.1031, 'W')
            FB_current_0to200A_no14_A.constant(12.781900, 1.5438, 'A')
            FB_current_0to200A_no14_A.constant(12.789900, 1.55, 'A')
            IR_AOM_no2_percent.constant(12.793002, 1.5, 'percent')
            Green_AOM_no6_W.constant(12.793009, 0.1, 'W')
            CompCoil_z_no20_A.constant(12.801100, 3.7, 'A')
            Li_img_HF_AOM350_ON_no3per6_on.go_low(12.801270)
            Li_Rep_no1per10_on.go_low(12.801278)
            Li_ZS_AOM_no1per2_on.go_low(12.801280)
            Li_img_HF_AOM_no1per12_on.go_low(12.801282)
            Li_Cooler_no1per5_on.go_low(12.801284)
            Li_img_AOM_no1per9_on.go_low(12.801286)
            Li_D1_no0per12_on.go_low(12.801288)
            Li_D2_no0per11_on.go_high(12.801292)
            Li_ZS_AOM_74to140MHz_no12_MHz.constant(12.801294, 110.0, 'MHz')
            Li_Cooler_no1per5_on.go_low(12.801330)
            Li_Rep_no1per10_on.go_low(12.801340)
            img_shutter_no0per14_on.go_high(12.801480)
            Li_img_HF_145to238_no21_MHz.constant(12.808002, 223.6, 'MHz')
            Li_D2_no0per11_on.go_low(12.808496)
            Li_img_HF_AOM350_ON_no3per6_on.go_high(12.808498)
            Li_img_HF_AOM_no1per12_on.go_high(12.808500)
            Li_img_HF_AOM_no1per12_on.go_low(12.808517)
            Li_D2_no0per11_on.go_high(12.808518)
            Li_img_HF_145to238_no21_MHz.constant(12.808595, 214.0, 'MHz')
            Li_img_HF_AOM350_ON_no3per6_on.go_low(12.808600)
            img_shutter_no0per14_on.go_low(12.809010)
            CompCoil_z_no20_A.constant(12.898000, 3.765, 'A')
            RF_switch_no3per8_on.go_high(12.910650)
            Osci_trigger_no1per16_on.go_high(12.915000)
            Osci_trigger_no1per16_on.go_low(12.915540)
            CompCoil_z_no20_A.constant(12.920000, 3.9, 'A')
            CompCoil_z_no20_A.constant(12.930006, 3.86, 'A')
            CompCoil_z_no20_A.constant(12.930156, 3.8648, 'A')
            CompCoil_z_no20_A.constant(12.930306, 3.8696, 'A')
            CompCoil_z_no20_A.constant(12.930456, 3.8744, 'A')
            Cr_MOT_AOM_no0per5_on.go_low(12.930507)
            Cr_ZS_AOM_no0per7_on.go_low(12.930547)
            Cr_AOM_MOT_int_no16_percent.constant(12.930567, 0.0, 'percent')
            Cr_R2_no1per7_on.go_low(12.930587)
            CompCoil_z_no20_A.constant(12.930606, 3.8792, 'A')
            Cr_R1_no1per6_on.go_low(12.930607)
            CompCoil_z_no20_A.constant(12.930756, 3.884, 'A')
            CompCoil_z_no20_A.constant(12.930906, 3.8888, 'A')
            CompCoil_z_no20_A.constant(12.931056, 3.8936, 'A')
            CompCoil_z_no20_A.constant(12.931206, 3.8984, 'A')
            CompCoil_z_no20_A.constant(12.931356, 3.9032, 'A')
            CompCoil_z_no20_A.constant(12.931506, 3.908, 'A')
            CompCoil_z_no20_A.constant(12.931656, 3.9128, 'A')
            CompCoil_z_no20_A.constant(12.931806, 3.9176, 'A')
            CompCoil_z_no20_A.constant(12.931956, 3.9224, 'A')
            CompCoil_z_no20_A.constant(12.932106, 3.9272, 'A')
            CompCoil_z_no20_A.constant(12.932256, 3.932, 'A')
            CompCoil_z_no20_A.constant(12.932406, 3.9368, 'A')
            CompCoil_z_no20_A.constant(12.932556, 3.9416, 'A')
            CompCoil_z_no20_A.constant(12.932706, 3.9464, 'A')
            CompCoil_z_no20_A.constant(12.932856, 3.9512, 'A')
            CompCoil_z_no20_A.constant(12.933006, 3.956, 'A')
            CompCoil_z_no20_A.constant(12.933156, 3.9608, 'A')
            CompCoil_z_no20_A.constant(12.933306, 3.9656, 'A')
            CompCoil_z_no20_A.constant(12.933456, 3.9704, 'A')
            CompCoil_z_no20_A.constant(12.933606, 3.9752, 'A')
            CompCoil_z_no20_A.constant(12.933755, 3.98, 'A')
            CompCoil_z_no20_A.constant(12.933905, 3.9848, 'A')
            CompCoil_z_no20_A.constant(12.934055, 3.9896, 'A')
            CompCoil_z_no20_A.constant(12.934205, 3.9944, 'A')
            CompCoil_z_no20_A.constant(12.934355, 3.9992, 'A')
            CompCoil_z_no20_A.constant(12.934505, 4.004, 'A')
            CompCoil_z_no20_A.constant(12.934655, 4.0088, 'A')
            CompCoil_z_no20_A.constant(12.934805, 4.0136, 'A')
            CompCoil_z_no20_A.constant(12.934955, 4.0184, 'A')
            RF_switch_no3per8_on.go_low(12.935000)
            CompCoil_z_no20_A.constant(12.935105, 4.0232, 'A')
            CompCoil_z_no20_A.constant(12.935255, 4.028, 'A')
            CompCoil_z_no20_A.constant(12.935405, 4.0328, 'A')
            CompCoil_z_no20_A.constant(12.935555, 4.0376, 'A')
            CompCoil_z_no20_A.constant(12.935705, 4.0424, 'A')
            CompCoil_z_no20_A.constant(12.935855, 4.0472, 'A')
            CompCoil_z_no20_A.constant(12.936005, 4.052, 'A')
            CompCoil_z_no20_A.constant(12.936155, 4.0568, 'A')
            CompCoil_z_no20_A.constant(12.936305, 4.0616, 'A')
            CompCoil_z_no20_A.constant(12.936455, 4.0664, 'A')
            CompCoil_z_no20_A.constant(12.936605, 4.0712, 'A')
            CompCoil_z_no20_A.constant(12.936755, 4.076, 'A')
            CompCoil_z_no20_A.constant(12.936905, 4.0808, 'A')
            CompCoil_z_no20_A.constant(12.937055, 4.0856, 'A')
            CompCoil_z_no20_A.constant(12.937205, 4.0904, 'A')
            CompCoil_z_no20_A.constant(12.937355, 4.0952, 'A')
            CompCoil_z_no20_A.constant(12.937505, 4.1, 'A')
            Osci_trigger_no1per16_on.go_high(12.940460)
            Osci_trigger_no1per16_on.go_low(12.941000)
            Crossed_AOM_no18_percent.constant(12.941071, 0.0, 'percent')
            Crossed_green_no3per7_on.go_low(12.941082)
            Crossed_Green_no19_W.constant(12.941087, 0.0, 'W')
            Green_AOM_TTL_no1per14_on.go_low(12.941096)
            IR_AOM_TTL_no1per15_on.go_low(12.941097)
            Green_AOM_no6_W.constant(12.941098, 0.0, 'W')
            IR_AOM_no2_percent.constant(12.941099, 0.0, 'percent')
            IR_laser_no3_W.constant(12.941101, 0.0, 'W')
            Crossed_AOM_no18_percent.constant(12.941103, 0.0, 'percent')
            Li_img_HF_AOM350_ON_no3per6_on.go_low(12.943380)
            Li_Rep_no1per10_on.go_low(12.943388)
            Li_ZS_AOM_no1per2_on.go_low(12.943390)
            Li_img_HF_AOM_no1per12_on.go_low(12.943392)
            Li_Cooler_no1per5_on.go_low(12.943394)
            Li_img_AOM_no1per9_on.go_low(12.943396)
            Li_D1_no0per12_on.go_low(12.943398)
            Li_D2_no0per11_on.go_high(12.943402)
            Li_ZS_AOM_74to140MHz_no12_MHz.constant(12.943404, 110.0, 'MHz')
            Li_Cooler_no1per5_on.go_low(12.943440)
            Li_Rep_no1per10_on.go_low(12.943450)
            img_shutter_no0per14_on.go_high(12.943580)
            Cr_mf_pump_no0per8_on.go_low(12.943590)
            Blue_shutter_no0per15_on.go_high(12.944110)
            Cr_img_shutter_no1per8_on.go_high(12.944610)
            CompCoil_z_no20_A.constant(12.947107, 3.0, 'A')
            Li_img_HF_145to238_no21_MHz.constant(12.949900, 227.5, 'MHz')
            Stingray_no1per1_on.go_high(12.950090)
            Cr_TC_AOM_no0per6_on.go_low(12.950108)
            Li_img_HF_AOM_no1per12_on.go_high(12.950109)
            Cr_mf_pump_no0per8_on.go_high(12.950110)
            Cr_mf_pump_no0per8_on.go_low(12.950201)
            Li_img_HF_AOM_no1per12_on.go_low(12.950202)
            Cr_TC_AOM_no0per6_on.go_high(12.950203)
            Cr_img_shutter_no1per8_on.go_low(12.950206)
            Stingray_no1per1_on.go_low(12.950210)
            Li_img_HF_145to238_no21_MHz.constant(12.950512, 223.65, 'MHz')
            Stingray_no1per1_on.go_high(12.950610)
            Li_D2_no0per11_on.go_low(12.950706)
            Li_img_HF_AOM350_ON_no3per6_on.go_high(12.950708)
            Li_img_HF_AOM_no1per12_on.go_high(12.950710)
            Li_img_HF_AOM_no1per12_on.go_low(12.950725)
            Li_img_HF_AOM350_ON_no3per6_on.go_low(12.950726)
            Li_D2_no0per11_on.go_high(12.950730)
            img_shutter_no0per14_on.go_low(12.955731)
            Stingray_no1per1_on.go_low(13.015690)
            Current_Green_no1per11_off.go_high(13.141096)
            img_shutter_no0per14_on.go_high(13.143610)
            Cr_img_shutter_no1per8_on.go_high(13.144610)
            Li_img_HF_145to238_no21_MHz.constant(13.149910, 228.0, 'MHz')
            Stingray_no1per1_on.go_high(13.150090)
            Cr_TC_AOM_no0per6_on.go_low(13.150108)
            Li_img_HF_AOM_no1per12_on.go_high(13.150109)
            Cr_mf_pump_no0per8_on.go_high(13.150110)
            Cr_mf_pump_no0per8_on.go_low(13.150201)
            Li_img_HF_AOM_no1per12_on.go_low(13.150202)
            Cr_TC_AOM_no0per6_on.go_high(13.150203)
            Cr_img_shutter_no1per8_on.go_low(13.150206)
            Blue_shutter_no0per15_on.go_low(13.150209)
            Stingray_no1per1_on.go_low(13.150210)
            Li_img_HF_145to238_no21_MHz.constant(13.150511, 223.65, 'MHz')
            Stingray_no1per1_on.go_high(13.150610)
            Li_D2_no0per11_on.go_low(13.150706)
            Li_img_HF_AOM350_ON_no3per6_on.go_high(13.150708)
            Li_img_HF_AOM_no1per12_on.go_high(13.150710)
            Li_img_HF_AOM_no1per12_on.go_low(13.150725)
            Li_img_HF_AOM350_ON_no3per6_on.go_low(13.150726)
            Li_D2_no0per11_on.go_high(13.150730)
            img_shutter_no0per14_on.go_low(13.155731)
            Stingray_no1per1_on.go_low(13.215690)
            Stingray_no1per1_on.go_high(13.350090)
            Stingray_no1per1_on.go_low(13.350211)
            Stingray_no1per1_on.go_high(13.350610)
            Stingray_no1per1_on.go_low(13.415691)
            Cr_img_shutter_no1per8_on.go_low(13.541107)
            CrRepumpers_AOMshutter_no1per3_on.go_high(13.541111)
            Cr_AOM_MOT_60to127MHz_no4_MHz.constant(13.541113, 115.3, 'MHz')
            Cr_AOM_TC_70to115MHz_no5_MHz.constant(13.541115, 122.0, 'MHz')
            Cr_AOM_MOT_int_no16_percent.constant(13.541123, 50.0, 'percent')
            Cr_MOT_AOM_no0per5_on.go_high(13.541125)
            Cr_TC_AOM_no0per6_on.go_high(13.541127)
            Cr_ZS_AOM_no0per7_on.go_high(13.541129)
            Cr_R2_no1per7_on.go_high(13.541131)
            Cr_R1_no1per6_on.go_high(13.541133)
            Cr_AOM_R1_int_no17_percent.constant(13.541149, 100.0, 'percent')
            CrBlueRep_shutter_no3per4_on.go_high(13.541208)
            Blue_shutter_no0per15_on.go_high(13.541210)
            Comp_coils_Z_ON_no3per3_on.go_high(13.541211)
            Comp_coils_Y_ON_no3per5_on.go_high(13.541213)
            CompCoil_z_no20_A.constant(13.541215, 0.7, 'A')
            Li_D1_no0per12_on.go_low(13.641113)
            Li_Rep_no1per10_on.go_high(13.641115)
            Li_MOT_shutter_no0per13_on.go_high(13.641117)
            Li_Cooler_no1per5_on.go_high(13.641119)
            Li_cool_int_no7_percent.constant(13.641121, 100.0, 'percent')
            Li_rep_int_no13_percent.constant(13.641123, 100.0, 'percent')
            Li_cooling_no10_MHz.constant(13.641127, 83.0, 'MHz')
            Li_repumper_no11_MHz.constant(13.641129, 200.0, 'MHz')
            Li_ZS_AOM_no1per2_on.go_high(13.641131)
            Li_ZS_AOM_74to140MHz_no12_MHz.constant(13.641135, 85.0, 'MHz')
            Li_D2_no0per11_on.go_high(13.641141)
            CrRepumpers_Servoshutter_no1per13_on.go_high(13.641157)
            MOT_current_0to100A_no8_A.constant(13.860012, 180.0, 'A')
            MOT_current_0to100A_no8_A.constant(13.864094, 176.3265, 'A')
            MOT_current_0to100A_no8_A.constant(13.868175, 172.6531, 'A')
            MOT_current_0to100A_no8_A.constant(13.872257, 168.9796, 'A')
            MOT_current_0to100A_no8_A.constant(13.876338, 165.3061, 'A')
            MOT_current_0to100A_no8_A.constant(13.880420, 161.6327, 'A')
            MOT_current_0to100A_no8_A.constant(13.884502, 157.9592, 'A')
            MOT_current_0to100A_no8_A.constant(13.888583, 154.2857, 'A')
            MOT_current_0to100A_no8_A.constant(13.892665, 150.6122, 'A')
            MOT_current_0to100A_no8_A.constant(13.896747, 146.9388, 'A')
            MOT_current_0to100A_no8_A.constant(13.900828, 143.2653, 'A')
            MOT_current_0to100A_no8_A.constant(13.904910, 139.5918, 'A')
            MOT_current_0to100A_no8_A.constant(13.908991, 135.9184, 'A')
            MOT_current_0to100A_no8_A.constant(13.913073, 132.2449, 'A')
            MOT_current_0to100A_no8_A.constant(13.917155, 128.5714, 'A')
            MOT_current_0to100A_no8_A.constant(13.921236, 124.898, 'A')
            MOT_current_0to100A_no8_A.constant(13.925318, 121.2245, 'A')
            MOT_current_0to100A_no8_A.constant(13.929399, 117.551, 'A')
            MOT_current_0to100A_no8_A.constant(13.933481, 113.8776, 'A')
            MOT_current_0to100A_no8_A.constant(13.937563, 110.2041, 'A')
            MOT_current_0to100A_no8_A.constant(13.941644, 106.5306, 'A')
            MOT_current_0to100A_no8_A.constant(13.945726, 102.8571, 'A')
            MOT_current_0to100A_no8_A.constant(13.949807, 99.1837, 'A')
            MOT_current_0to100A_no8_A.constant(13.953889, 95.5102, 'A')
            MOT_current_0to100A_no8_A.constant(13.957971, 91.8367, 'A')
            MOT_current_0to100A_no8_A.constant(13.962052, 88.1633, 'A')
            MOT_current_0to100A_no8_A.constant(13.966134, 84.4898, 'A')
            MOT_current_0to100A_no8_A.constant(13.970216, 80.8163, 'A')
            MOT_current_0to100A_no8_A.constant(13.974297, 77.1429, 'A')
            MOT_current_0to100A_no8_A.constant(13.978379, 73.4694, 'A')
            MOT_current_0to100A_no8_A.constant(13.982460, 69.7959, 'A')
            MOT_current_0to100A_no8_A.constant(13.986542, 66.1224, 'A')
            MOT_current_0to100A_no8_A.constant(13.990624, 62.449, 'A')
            MOT_current_0to100A_no8_A.constant(13.994705, 58.7755, 'A')
            MOT_current_0to100A_no8_A.constant(13.998787, 55.102, 'A')
            MOT_current_0to100A_no8_A.constant(14.002868, 51.4286, 'A')
            MOT_current_0to100A_no8_A.constant(14.006950, 47.7551, 'A')
            MOT_current_0to100A_no8_A.constant(14.011032, 44.0816, 'A')
            MOT_current_0to100A_no8_A.constant(14.015113, 40.4082, 'A')
            MOT_current_0to100A_no8_A.constant(14.019195, 36.7347, 'A')
            MOT_current_0to100A_no8_A.constant(14.023276, 33.0612, 'A')
            MOT_current_0to100A_no8_A.constant(14.027358, 29.3878, 'A')
            MOT_current_0to100A_no8_A.constant(14.031440, 25.7143, 'A')
            MOT_current_0to100A_no8_A.constant(14.035521, 22.0408, 'A')
            MOT_current_0to100A_no8_A.constant(14.039603, 18.3673, 'A')
            MOT_current_0to100A_no8_A.constant(14.043685, 14.6939, 'A')
            MOT_current_0to100A_no8_A.constant(14.047766, 11.0204, 'A')
            MOT_current_0to100A_no8_A.constant(14.051848, 7.3469, 'A')
            MOT_current_0to100A_no8_A.constant(14.055929, 3.6735, 'A')
            MOT_current_0to100A_no8_A.constant(14.060011, 0.0, 'A')
            FB_current_0to200A_no14_A.constant(15.600000, 0.0, 'A')
            MOT_current_0to100A_no8_A.constant(15.601000, 0.0, 'A')
            Cr_ZS_current_no0per4_on.go_low(15.602000)
            Li_ZS_current_no0per9_on.go_low(15.604000)
            Green_AOM_TTL_no1per14_on.go_low(15.605000)
            Green_AOM_no6_W.constant(15.605002, 0.0, 'W')
            IR_AOM_TTL_no1per15_on.go_low(15.608000)
            IR_AOM_no2_percent.constant(15.608002, 0.0, 'percent')
            IR_laser_no3_W.constant(15.608004, 0.0, 'W')
            Crossed_AOM_no18_percent.constant(15.608006, 0.0, 'percent')
            FB_IGBT_no0per16_on.go_low(15.610000)
            MOT_IGBT_no0per1_on.go_low(15.611000)
            Current_Green_no1per11_off.go_high(15.805000)
            t = 15.805

    # stop sequence
    stop(t + dt)


